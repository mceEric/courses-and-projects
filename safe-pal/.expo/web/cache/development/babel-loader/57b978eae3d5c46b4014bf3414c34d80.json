{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"dark\", \"style\", \"theme\"],\n    _excluded2 = [\"backgroundColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport AppbarHeader from \"./AppbarHeader\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DEFAULT_APPBAR_HEIGHT = 56;\n\nvar Appbar = function (_React$Component) {\n  _inherits(Appbar, _React$Component);\n\n  var _super = _createSuper(Appbar);\n\n  function Appbar() {\n    _classCallCheck(this, Appbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Appbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          dark = _this$props.dark,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var colors = theme.colors;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor,\n          restStyle = _objectWithoutProperties(_ref, _excluded2);\n\n      var isDark;\n\n      if (typeof dark === 'boolean') {\n        isDark = dark;\n      } else {\n        isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).light();\n      }\n\n      var shouldCenterContent = false;\n      var shouldAddLeftSpacing = false;\n      var shouldAddRightSpacing = false;\n\n      if (Platform.OS === 'ios') {\n        var hasAppbarContent = false;\n        var leftItemsCount = 0;\n        var rightItemsCount = 0;\n        React.Children.forEach(children, function (child) {\n          if (React.isValidElement(child)) {\n            if (child.type === AppbarContent) {\n              hasAppbarContent = true;\n            } else if (hasAppbarContent) {\n              rightItemsCount++;\n            } else {\n              leftItemsCount++;\n            }\n          }\n        });\n        shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n        shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n        shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n      }\n\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: [{\n          backgroundColor: backgroundColor\n        }, styles.appbar, restStyle]\n      }, rest), {}, {\n        children: [shouldAddLeftSpacing ? _jsx(View, {\n          style: styles.spacing\n        }) : null, React.Children.toArray(children).filter(function (child) {\n          return child != null && typeof child !== 'boolean';\n        }).map(function (child, i) {\n          if (!React.isValidElement(child)) {\n            return child;\n          }\n\n          var props = {\n            color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n          };\n\n          if (child.type === AppbarContent) {\n            props.style = [i !== 0 && {\n              marginLeft: 8\n            }, shouldCenterContent && {\n              alignItems: 'center'\n            }, child.props.style];\n          }\n\n          return React.cloneElement(child, props);\n        }), shouldAddRightSpacing ? _jsx(View, {\n          style: styles.spacing\n        }) : null]\n      }));\n    }\n  }]);\n\n  return Appbar;\n}(React.Component);\n\nAppbar.Content = AppbarContent;\nAppbar.Action = AppbarAction;\nAppbar.BackAction = AppbarBackAction;\nAppbar.Header = AppbarHeader;\nvar styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Appbar/Appbar.js"],"names":["React","color","AppbarContent","AppbarAction","AppbarBackAction","AppbarHeader","withTheme","black","white","DEFAULT_APPBAR_HEIGHT","Appbar","props","children","dark","style","theme","rest","colors","StyleSheet","flatten","backgroundColor","primary","restStyle","isDark","light","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","styles","appbar","spacing","toArray","filter","map","i","marginLeft","alignItems","cloneElement","Component","Content","Action","BackAction","Header","create","height","flexDirection","paddingHorizontal","elevation","width"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { View, Platform, StyleSheet } from 'react-native';\r\nimport color from 'color';\r\n\r\nimport AppbarContent from './AppbarContent';\r\nimport AppbarAction from './AppbarAction';\r\nimport AppbarBackAction from './AppbarBackAction';\r\nimport AppbarHeader from './AppbarHeader';\r\nimport { withTheme } from '../../core/theming';\r\nimport { black, white } from '../../styles/colors';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\r\n   */\r\n  dark?: boolean,\r\n  /**\r\n   * Content of the `Appbar`.\r\n   */\r\n  children: React.Node,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n  style?: any,\r\n};\r\n\r\nexport const DEFAULT_APPBAR_HEIGHT = 56;\r\n\r\n/**\r\n * A component to display action items in a bar. It can be placed at the top or bottom.\r\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\r\n * The bottom bar usually provides access to a drawer and up to four actions.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Appbar } from 'react-native-paper';\r\n * import { StyleSheet } from 'react-native';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   render() {\r\n *     return (\r\n *       <Appbar style={styles.bottom}>\r\n *         <Appbar.Action icon=\"archive\" onPress={() => console.log('Pressed archive')} />\r\n *         <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\r\n *         <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\r\n *         <Appbar.Action icon=\"delete\" onPress={() => console.log('Pressed delete')} />\r\n *       </Appbar>\r\n *     );\r\n *   }\r\n * }\r\n *\r\n * const styles = StyleSheet.create({\r\n *   bottom: {\r\n *     position: 'absolute',\r\n *     left: 0,\r\n *     right: 0,\r\n *     bottom: 0,\r\n *   },\r\n * });\r\n * ```\r\n */\r\nclass Appbar extends React.Component<Props> {\r\n  // @component ./AppbarContent.js\r\n  static Content = AppbarContent;\r\n  // @component ./AppbarAction.js\r\n  static Action = AppbarAction;\r\n  // @component ./AppbarBackAction.js\r\n  static BackAction = AppbarBackAction;\r\n  // @component ./AppbarHeader.js\r\n  static Header = AppbarHeader;\r\n\r\n  render() {\r\n    const { children, dark, style, theme, ...rest } = this.props;\r\n\r\n    const { colors } = theme;\r\n    const { backgroundColor = colors.primary, ...restStyle } =\r\n      StyleSheet.flatten(style) || {};\r\n\r\n    let isDark;\r\n\r\n    if (typeof dark === 'boolean') {\r\n      isDark = dark;\r\n    } else {\r\n      isDark =\r\n        backgroundColor === 'transparent'\r\n          ? false\r\n          : !color(backgroundColor).light();\r\n    }\r\n\r\n    let shouldCenterContent = false;\r\n    let shouldAddLeftSpacing = false;\r\n    let shouldAddRightSpacing = false;\r\n\r\n    if (Platform.OS === 'ios') {\r\n      let hasAppbarContent = false;\r\n      let leftItemsCount = 0;\r\n      let rightItemsCount = 0;\r\n\r\n      React.Children.forEach(children, child => {\r\n        if (React.isValidElement(child)) {\r\n          if (child.type === AppbarContent) {\r\n            hasAppbarContent = true;\r\n          } else if (hasAppbarContent) {\r\n            rightItemsCount++;\r\n          } else {\r\n            leftItemsCount++;\r\n          }\r\n        }\r\n      });\r\n\r\n      shouldCenterContent =\r\n        hasAppbarContent && (leftItemsCount < 2 && rightItemsCount < 2);\r\n      shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\r\n      shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\r\n    }\r\n\r\n    return (\r\n      <View style={[{ backgroundColor }, styles.appbar, restStyle]} {...rest}>\r\n        {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\r\n        {React.Children.toArray(children)\r\n          .filter(child => child != null && typeof child !== 'boolean')\r\n          .map((child, i) => {\r\n            if (!React.isValidElement(child)) {\r\n              return child;\r\n            }\r\n\r\n            const props: { color: ?string, style?: any } = {\r\n              color:\r\n                typeof child.props.color !== 'undefined'\r\n                  ? child.props.color\r\n                  : isDark\r\n                    ? white\r\n                    : black,\r\n            };\r\n\r\n            if (child.type === AppbarContent) {\r\n              props.style = [\r\n                // Since content is not first item, add extra left margin\r\n                i !== 0 && { marginLeft: 8 },\r\n                shouldCenterContent && { alignItems: 'center' },\r\n                child.props.style,\r\n              ];\r\n            }\r\n\r\n            return React.cloneElement(child, props);\r\n          })}\r\n        {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appbar: {\r\n    height: DEFAULT_APPBAR_HEIGHT,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 4,\r\n    elevation: 4,\r\n  },\r\n  spacing: {\r\n    width: 48,\r\n  },\r\n});\r\n\r\nexport default withTheme(Appbar);\r\n"]},"metadata":{},"sourceType":"module"}