{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon, { isValidIcon, isEqualIcon } from \"./Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CrossFadeIcon = function (_React$Component) {\n  _inherits(CrossFadeIcon, _React$Component);\n\n  var _super = _createSuper(CrossFadeIcon);\n\n  function CrossFadeIcon() {\n    var _this;\n\n    _classCallCheck(this, CrossFadeIcon);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentIcon: _this.props.source,\n      previousIcon: null,\n      fade: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(CrossFadeIcon, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var previousIcon = this.state.previousIcon;\n\n      if (!isValidIcon(previousIcon) || isEqualIcon(previousIcon, prevState.previousIcon)) {\n        return;\n      }\n\n      this.state.fade.setValue(1);\n      Animated.timing(this.state.fade, {\n        duration: 200,\n        toValue: 0\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          color = _this$props.color,\n          size = _this$props.size;\n      var opacityPrev = this.state.fade;\n      var opacityNext = this.state.previousIcon ? this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }) : 1;\n      var rotatePrev = this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['-90deg', '0deg']\n      });\n      var rotateNext = this.state.previousIcon ? this.state.fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg']\n      }) : '0deg';\n      return _jsxs(View, {\n        style: [styles.content, {\n          height: size,\n          width: size\n        }],\n        children: [this.state.previousIcon ? _jsx(Animated.View, {\n          style: [styles.icon, {\n            opacity: opacityPrev,\n            transform: [{\n              rotate: rotatePrev\n            }]\n          }],\n          children: _jsx(Icon, {\n            source: this.state.previousIcon,\n            size: size,\n            color: color\n          })\n        }) : null, _jsx(Animated.View, {\n          style: [styles.icon, {\n            opacity: opacityNext,\n            transform: [{\n              rotate: rotateNext\n            }]\n          }],\n          children: _jsx(Icon, {\n            source: this.state.currentIcon,\n            size: size,\n            color: color\n          })\n        })]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, nextState) {\n      if (nextState.currentIcon === nextProps.source) {\n        return null;\n      }\n\n      return {\n        currentIcon: nextProps.source,\n        previousIcon: nextState.currentIcon\n      };\n    }\n  }]);\n\n  return CrossFadeIcon;\n}(React.Component);\n\npolyfill(CrossFadeIcon);\nexport default CrossFadeIcon;\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/CrossFadeIcon.js"],"names":["React","polyfill","Icon","isValidIcon","isEqualIcon","CrossFadeIcon","state","currentIcon","props","source","previousIcon","fade","Animated","Value","prevProps","prevState","setValue","timing","duration","toValue","start","color","size","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","nextProps","nextState","Component","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { Animated, StyleSheet, View } from 'react-native';\r\nimport { polyfill } from 'react-lifecycles-compat';\r\nimport Icon, { isValidIcon, isEqualIcon } from './Icon';\r\nimport type { IconSource } from './Icon';\r\n\r\ntype Props = {\r\n  /**\r\n   * Icon to display for the `CrossFadeIcon`.\r\n   */\r\n  source: IconSource,\r\n  /**\r\n   * Color of the icon.\r\n   */\r\n  color: string,\r\n  /**\r\n   * Size of the icon.\r\n   */\r\n  size: number,\r\n};\r\n\r\ntype State = {\r\n  currentIcon: IconSource,\r\n  previousIcon: ?IconSource,\r\n  fade: Animated.Value,\r\n};\r\n\r\nclass CrossFadeIcon extends React.Component<Props, State> {\r\n  static getDerivedStateFromProps(nextProps: Props, nextState: State) {\r\n    if (nextState.currentIcon === nextProps.source) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      currentIcon: nextProps.source,\r\n      previousIcon: nextState.currentIcon,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    currentIcon: this.props.source,\r\n    previousIcon: null,\r\n    fade: new Animated.Value(1),\r\n  };\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    const { previousIcon } = this.state;\r\n\r\n    if (\r\n      !isValidIcon(previousIcon) ||\r\n      isEqualIcon(previousIcon, prevState.previousIcon)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.state.fade.setValue(1);\r\n\r\n    Animated.timing(this.state.fade, {\r\n      duration: 200,\r\n      toValue: 0,\r\n    }).start();\r\n  }\r\n\r\n  render() {\r\n    const { color, size } = this.props;\r\n    const opacityPrev = this.state.fade;\r\n    const opacityNext = this.state.previousIcon\r\n      ? this.state.fade.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: [1, 0],\r\n        })\r\n      : 1;\r\n\r\n    const rotatePrev = this.state.fade.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: ['-90deg', '0deg'],\r\n    });\r\n\r\n    const rotateNext = this.state.previousIcon\r\n      ? this.state.fade.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: ['0deg', '-180deg'],\r\n        })\r\n      : '0deg';\r\n\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.content,\r\n          {\r\n            height: size,\r\n            width: size,\r\n          },\r\n        ]}\r\n      >\r\n        {this.state.previousIcon ? (\r\n          <Animated.View\r\n            style={[\r\n              styles.icon,\r\n              {\r\n                opacity: opacityPrev,\r\n                transform: [{ rotate: rotatePrev }],\r\n              },\r\n            ]}\r\n          >\r\n            <Icon source={this.state.previousIcon} size={size} color={color} />\r\n          </Animated.View>\r\n        ) : null}\r\n        <Animated.View\r\n          style={[\r\n            styles.icon,\r\n            {\r\n              opacity: opacityNext,\r\n              transform: [{ rotate: rotateNext }],\r\n            },\r\n          ]}\r\n        >\r\n          <Icon source={this.state.currentIcon} size={size} color={color} />\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\npolyfill(CrossFadeIcon);\r\n\r\nexport default CrossFadeIcon;\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  icon: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}