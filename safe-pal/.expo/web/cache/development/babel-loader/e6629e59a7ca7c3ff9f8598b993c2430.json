{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport setColor from 'color';\nimport ProgressBarComponent from \"./ProgressBarComponent\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          progress = _this$props.progress,\n          color = _this$props.color,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      var tintColor = color || theme.colors.primary;\n      var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n      return _jsx(ProgressBarComponent, {\n        styleAttr: \"Horizontal\",\n        indeterminate: false,\n        progress: progress,\n        progressTintColor: tintColor,\n        color: tintColor,\n        style: [styles.progressBarHeight, style],\n        trackTintColor: trackTintColor\n      });\n    }\n  }]);\n\n  return ProgressBar;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  progressBarHeight: {\n    paddingVertical: 10\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/ProgressBar/ProgressBar.js"],"names":["React","setColor","ProgressBarComponent","withTheme","ProgressBar","props","progress","color","style","theme","tintColor","colors","primary","trackTintColor","alpha","rgb","string","styles","progressBarHeight","Component","StyleSheet","create","paddingVertical"],"mappings":";;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,QAAP,MAAqB,OAArB;AACA,OAAOC,oBAAP;AACA,SAASC,SAAT;;;IAsCMC,W;;;;;;;;;;;;;WACJ,kBAAS;AACP,wBAA0C,KAAKC,KAA/C;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AAAA,UAAyBC,KAAzB,eAAyBA,KAAzB;AAAA,UAAgCC,KAAhC,eAAgCA,KAAhC;AACA,UAAMC,SAAS,GAAGH,KAAK,IAAIE,KAAK,CAACE,MAAN,CAAaC,OAAxC;AACA,UAAMC,cAAc,GAAGZ,QAAQ,CAACS,SAAD,CAAR,CACpBI,KADoB,CACd,IADc,EAEpBC,GAFoB,GAGpBC,MAHoB,EAAvB;AAKA,aACE,KAAC,oBAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,aAAa,EAAE,KAFjB;AAGE,QAAA,QAAQ,EAAEV,QAHZ;AAIE,QAAA,iBAAiB,EAAEI,SAJrB;AAKE,QAAA,KAAK,EAAEA,SALT;AAME,QAAA,KAAK,EAAE,CAACO,MAAM,CAACC,iBAAR,EAA2BV,KAA3B,CANT;AAOE,QAAA,cAAc,EAAEK;AAPlB,QADF;AAWD;;;;EApBuBb,KAAK,CAACmB,S;;AAuBhC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,iBAAiB,EAAE;AACjBI,IAAAA,eAAe,EAAE;AADA;AADY,CAAlB,CAAf;AAMA,eAAenB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport setColor from 'color';\r\nimport ProgressBarComponent from './ProgressBarComponent';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Progress value (between 0 and 1).\r\n   */\r\n  progress: number,\r\n  /**\r\n   * Color of the progress bar.\r\n   */\r\n  color?: string,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * Progress bar is an indicator used to present progress of some activity in the app.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/progress-bar.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ProgressBar, Colors } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <ProgressBar progress={0.5} color={Colors.red800} />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass ProgressBar extends React.Component<Props> {\r\n  render() {\r\n    const { progress, color, style, theme } = this.props;\r\n    const tintColor = color || theme.colors.primary;\r\n    const trackTintColor = setColor(tintColor)\r\n      .alpha(0.38)\r\n      .rgb()\r\n      .string();\r\n\r\n    return (\r\n      <ProgressBarComponent\r\n        styleAttr=\"Horizontal\"\r\n        indeterminate={false}\r\n        progress={progress}\r\n        progressTintColor={tintColor}\r\n        color={tintColor}\r\n        style={[styles.progressBarHeight, style]}\r\n        trackTintColor={trackTintColor}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  progressBarHeight: {\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default withTheme(ProgressBar);\r\n"]},"metadata":{},"sourceType":"module"}