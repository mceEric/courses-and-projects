{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { ThemeProvider } from \"./theming\";\nimport Portal from \"../components/Portal/Portal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Provider = function (_React$Component) {\n  _inherits(Provider, _React$Component);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(Portal.Host, {\n        children: _jsx(ThemeProvider, {\n          theme: this.props.theme,\n          children: this.props.children\n        })\n      });\n    }\n  }]);\n\n  return Provider;\n}(React.Component);\n\nexport { Provider as default };","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/core/Provider.js"],"names":["React","ThemeProvider","Portal","Provider","props","theme","children","Component"],"mappings":";;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT;AACA,OAAOC,MAAP;;;IAQqBC,Q;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,KAAC,MAAD,CAAQ,IAAR;AAAA,kBACE,KAAC,aAAD;AAAe,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAjC;AAAA,oBACG,KAAKD,KAAL,CAAWE;AADd;AADF,QADF;AAOD;;;;EATmCN,KAAK,CAACO,S;;SAAvBJ,Q","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { ThemeProvider } from './theming';\r\nimport Portal from '../components/Portal/Portal';\r\nimport type { Theme } from '../types';\r\n\r\ntype Props = {\r\n  children: React.Node,\r\n  theme?: $Shape<Theme>,\r\n};\r\n\r\nexport default class Provider extends React.Component<Props> {\r\n  render() {\r\n    return (\r\n      <Portal.Host>\r\n        <ThemeProvider theme={this.props.theme}>\r\n          {this.props.children}\r\n        </ThemeProvider>\r\n      </Portal.Host>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}