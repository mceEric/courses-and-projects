{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"../Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ListIcon = function (_React$Component) {\n  _inherits(ListIcon, _React$Component);\n\n  var _super = _createSuper(ListIcon);\n\n  function ListIcon() {\n    _classCallCheck(this, ListIcon);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListIcon, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          icon = _this$props.icon,\n          iconColor = _this$props.color,\n          style = _this$props.style;\n      return _jsx(View, {\n        style: [styles.item, style],\n        pointerEvents: \"box-none\",\n        children: _jsx(Icon, {\n          source: icon,\n          size: 24,\n          color: iconColor\n        })\n      });\n    }\n  }]);\n\n  return ListIcon;\n}(React.Component);\n\nListIcon.displayName = 'List.Icon';\nexport { ListIcon as default };\nvar styles = StyleSheet.create({\n  item: {\n    margin: 8,\n    height: 40,\n    width: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/List/ListIcon.js"],"names":["React","Icon","ListIcon","props","icon","iconColor","color","style","styles","item","Component","displayName","StyleSheet","create","margin","height","width","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,IAAP;;;IA6BqBC,Q;;;;;;;;;;;;;WAGnB,kBAAS;AACP,wBAA0C,KAAKC,KAA/C;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAqBC,SAArB,eAAcC,KAAd;AAAA,UAAgCC,KAAhC,eAAgCA,KAAhC;AAEA,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAcF,KAAd,CAAb;AAAmC,QAAA,aAAa,EAAC,UAAjD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,MAAM,EAAEH,IAAd;AAAoB,UAAA,IAAI,EAAE,EAA1B;AAA8B,UAAA,KAAK,EAAEC;AAArC;AADF,QADF;AAKD;;;;EAXmCL,KAAK,CAACU,S;;AAAvBR,Q,CACZS,W,GAAc,W;SADFT,Q;AAcrB,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,KAAK,EAAE,EAHH;AAIJC,IAAAA,UAAU,EAAE,QAJR;AAKJC,IAAAA,cAAc,EAAE;AALZ;AADyB,CAAlB,CAAf","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Icon, { type IconSource } from '../Icon';\r\n\r\ntype Props = {\r\n  /**\r\n   * Icon to show.\r\n   */\r\n  icon: IconSource,\r\n  /**\r\n   * Color for the icon.\r\n   */\r\n  color: string,\r\n  style?: any,\r\n};\r\n\r\n/**\r\n * A component to show an icon in a list item.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List, Colors } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <List.Icon color={Colors.blue500} icon=\"folder\" />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nexport default class ListIcon extends React.Component<Props> {\r\n  static displayName = 'List.Icon';\r\n\r\n  render() {\r\n    const { icon, color: iconColor, style } = this.props;\r\n\r\n    return (\r\n      <View style={[styles.item, style]} pointerEvents=\"box-none\">\r\n        <Icon source={icon} size={24} color={iconColor} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    margin: 8,\r\n    height: 40,\r\n    width: 40,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}