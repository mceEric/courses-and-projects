{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DialogScrollArea = function (_React$Component) {\n  _inherits(DialogScrollArea, _React$Component);\n\n  var _super = _createSuper(DialogScrollArea);\n\n  function DialogScrollArea() {\n    _classCallCheck(this, DialogScrollArea);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogScrollArea, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: [styles.container, this.props.style],\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return DialogScrollArea;\n}(React.Component);\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\nvar styles = StyleSheet.create({\n  container: {\n    borderColor: 'rgba(0, 0, 0, .12)',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    paddingHorizontal: 24\n  }\n});\nexport default DialogScrollArea;","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Dialog/DialogScrollArea.js"],"names":["React","DialogScrollArea","styles","container","props","style","children","Component","displayName","StyleSheet","create","borderColor","borderTopWidth","hairlineWidth","borderBottomWidth","paddingHorizontal"],"mappings":";;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;IA8CMC,gB;;;;;;;;;;;;;WAGJ,kBAAS;AACP,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB,KAAKC,KAAL,CAAWC,KAA9B,CAAb;AAAA,kBACG,KAAKD,KAAL,CAAWE;AADd,QADF;AAKD;;;;EAT4BN,KAAK,CAACO,S;;AAA/BN,gB,CACGO,W,GAAc,mB;AAWvB,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,WAAW,EAAE,oBADJ;AAETC,IAAAA,cAAc,EAAEH,UAAU,CAACI,aAFlB;AAGTC,IAAAA,iBAAiB,EAAEL,UAAU,CAACI,aAHrB;AAITE,IAAAA,iBAAiB,EAAE;AAJV;AADoB,CAAlB,CAAf;AASA,eAAed,gBAAf","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\ntype Props = {\r\n  /**\r\n   * Content of the `DialogScrollArea`.\r\n   */\r\n  children: React.Node,\r\n  style?: any,\r\n};\r\n\r\n/**\r\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\r\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { ScrollView } from 'react-native';\r\n * import { Dialog, Portal } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _hideDialog = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <Portal>\r\n *         <Dialog\r\n *           visible={this.state.visible}\r\n *           onDismiss={this._hideDialog}>\r\n *           <Dialog.ScrollArea>\r\n *             <ScrollView contentContainerStyle={{ paddingHorizontal: 24 }}>\r\n *               This is a scrollable area\r\n *             </ScrollView>\r\n *           </Dialog.ScrollArea>\r\n *         </Dialog>\r\n *       </Portal>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nclass DialogScrollArea extends React.Component<Props> {\r\n  static displayName = 'Dialog.ScrollArea';\r\n\r\n  render() {\r\n    return (\r\n      <View style={[styles.container, this.props.style]}>\r\n        {this.props.children}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderColor: 'rgba(0, 0, 0, .12)',\r\n    borderTopWidth: StyleSheet.hairlineWidth,\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    paddingHorizontal: 24,\r\n  },\r\n});\r\n\r\nexport default DialogScrollArea;\r\n"]},"metadata":{},"sourceType":"module"}