{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ListSection = function (_React$Component) {\n  _inherits(ListSection, _React$Component);\n\n  var _super = _createSuper(ListSection);\n\n  function ListSection() {\n    _classCallCheck(this, ListSection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ListSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          title = _this$props.title,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var titleColor = color(colors.text).alpha(0.54).rgb().string();\n      var fontFamily = fonts.medium;\n      return _jsxs(View, _objectSpread(_objectSpread({}, rest), {}, {\n        style: [styles.container, style],\n        children: [title && _jsx(Text, {\n          numberOfLines: 1,\n          style: [styles.title, {\n            color: titleColor,\n            fontFamily: fontFamily\n          }],\n          children: title\n        }), children]\n      }));\n    }\n  }]);\n\n  return ListSection;\n}(React.Component);\n\nListSection.displayName = 'List.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 8\n  },\n  title: {\n    marginVertical: 13,\n    marginHorizontal: 16\n  }\n});\nexport default withTheme(ListSection);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/List/ListSection.js"],"names":["color","React","Text","withTheme","ListSection","props","children","title","theme","style","rest","colors","fonts","titleColor","text","alpha","rgb","string","fontFamily","medium","styles","container","Component","displayName","StyleSheet","create","marginVertical","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,IAAP;AACA,SAASC,SAAT;;;;IAmDMC,W;;;;;;;;;;;;;WAGJ,kBAAS;AACP,wBAAmD,KAAKC,KAAxD;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AAAA,UAAyBC,KAAzB,eAAyBA,KAAzB;AAAA,UAAgCC,KAAhC,eAAgCA,KAAhC;AAAA,UAA0CC,IAA1C;;AACA,UAAQC,MAAR,GAA0BH,KAA1B,CAAQG,MAAR;AAAA,UAAgBC,KAAhB,GAA0BJ,KAA1B,CAAgBI,KAAhB;AAEA,UAAMC,UAAU,GAAGb,KAAK,CAACW,MAAM,CAACG,IAAR,CAAL,CAChBC,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;AAIA,UAAMC,UAAU,GAAGN,KAAK,CAACO,MAAzB;AAEA,aACE,MAAC,IAAD,kCAAUT,IAAV;AAAgB,QAAA,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBZ,KAAnB,CAAvB;AAAA,mBACGF,KAAK,IACJ,KAAC,IAAD;AACE,UAAA,aAAa,EAAE,CADjB;AAEE,UAAA,KAAK,EAAE,CAACa,MAAM,CAACb,KAAR,EAAe;AAAEP,YAAAA,KAAK,EAAEa,UAAT;AAAqBK,YAAAA,UAAU,EAAVA;AAArB,WAAf,CAFT;AAAA,oBAIGX;AAJH,UAFJ,EASGD,QATH;AAAA,SADF;AAaD;;;;EA1BuBL,KAAK,CAACqB,S;;AAA1BlB,W,CACGmB,W,GAAc,c;AA4BvB,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,cAAc,EAAE;AADP,GADoB;AAI/BnB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,cAAc,EAAE,EADX;AAELC,IAAAA,gBAAgB,EAAE;AAFb;AAJwB,CAAlB,CAAf;AAUA,eAAexB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport color from 'color';\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport Text from '../Typography/Text';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Title text for the section.\r\n   */\r\n  title?: string,\r\n  /**\r\n   * Content of the section.\r\n   */\r\n  children: React.Node,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n  style?: any,\r\n};\r\n\r\n/**\r\n * A component used to group list items.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/list-section.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { List } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   render() {\r\n *     return (\r\n *       <List.Section title=\"Some title\">\r\n *         <List.Item\r\n *           title=\"First Item\"\r\n *           left={() => <List.Icon icon=\"folder\" />}\r\n *        />\r\n *         <List.Item\r\n *           title=\"Second Item\"\r\n *           left={() => <List.Icon icon=\"folder\" />}\r\n *        />\r\n *      </List.Section>\r\n *     );\r\n *   }\r\n * }\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass ListSection extends React.Component<Props> {\r\n  static displayName = 'List.Section';\r\n\r\n  render() {\r\n    const { children, title, theme, style, ...rest } = this.props;\r\n    const { colors, fonts } = theme;\r\n\r\n    const titleColor = color(colors.text)\r\n      .alpha(0.54)\r\n      .rgb()\r\n      .string();\r\n    const fontFamily = fonts.medium;\r\n\r\n    return (\r\n      <View {...rest} style={[styles.container, style]}>\r\n        {title && (\r\n          <Text\r\n            numberOfLines={1}\r\n            style={[styles.title, { color: titleColor, fontFamily }]}\r\n          >\r\n            {title}\r\n          </Text>\r\n        )}\r\n        {children}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 8,\r\n  },\r\n  title: {\r\n    marginVertical: 13,\r\n    marginHorizontal: 16,\r\n  },\r\n});\r\n\r\nexport default withTheme(ListSection);\r\n"]},"metadata":{},"sourceType":"module"}