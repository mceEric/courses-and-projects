{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { black } from \"../../styles/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AppbarContent = function (_React$Component) {\n  _inherits(AppbarContent, _React$Component);\n\n  var _super = _createSuper(AppbarContent);\n\n  function AppbarContent() {\n    _classCallCheck(this, AppbarContent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$color = _this$props.color,\n          titleColor = _this$props$color === void 0 ? black : _this$props$color,\n          subtitle = _this$props.subtitle,\n          subtitleStyle = _this$props.subtitleStyle,\n          style = _this$props.style,\n          titleStyle = _this$props.titleStyle,\n          theme = _this$props.theme,\n          title = _this$props.title;\n      var fonts = theme.fonts;\n      var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n      return _jsxs(View, {\n        style: [styles.container, style],\n        children: [_jsx(Text, {\n          style: [{\n            color: titleColor,\n            fontFamily: Platform.OS === 'ios' ? fonts.regular : fonts.medium\n          }, styles.title, titleStyle],\n          numberOfLines: 1,\n          accessibilityTraits: \"header\",\n          accessibilityRole: \"header\",\n          children: title\n        }), subtitle ? _jsx(Text, {\n          style: [styles.subtitle, {\n            color: subtitleColor\n          }, subtitleStyle],\n          numberOfLines: 1,\n          children: subtitle\n        }) : null]\n      });\n    }\n  }]);\n\n  return AppbarContent;\n}(React.Component);\n\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Appbar/AppbarContent.js"],"names":["React","color","Text","withTheme","black","AppbarContent","props","titleColor","subtitle","subtitleStyle","style","titleStyle","theme","title","fonts","subtitleColor","alpha","rgb","string","styles","container","fontFamily","Platform","OS","regular","medium","Component","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize"],"mappings":";;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AAEA,SAASC,SAAT;AACA,SAASC,KAAT;;;;IAmCMC,a;;;;;;;;;;;;;WAGJ,kBAAS;AACP,wBAQI,KAAKC,KART;AAAA,0CACEL,KADF;AAAA,UACSM,UADT,kCACsBH,KADtB;AAAA,UAEEI,QAFF,eAEEA,QAFF;AAAA,UAGEC,aAHF,eAGEA,aAHF;AAAA,UAIEC,KAJF,eAIEA,KAJF;AAAA,UAKEC,UALF,eAKEA,UALF;AAAA,UAMEC,KANF,eAMEA,KANF;AAAA,UAOEC,KAPF,eAOEA,KAPF;AASA,UAAQC,KAAR,GAAkBF,KAAlB,CAAQE,KAAR;AAEA,UAAMC,aAAa,GAAGd,KAAK,CAACM,UAAD,CAAL,CACnBS,KADmB,CACb,GADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB;AAKA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBV,KAAnB,CAAb;AAAA,mBACE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE,CACL;AACET,YAAAA,KAAK,EAAEM,UADT;AAEEc,YAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBT,KAAK,CAACU,OAA9B,GAAwCV,KAAK,CAACW;AAF5D,WADK,EAKLN,MAAM,CAACN,KALF,EAMLF,UANK,CADT;AASE,UAAA,aAAa,EAAE,CATjB;AAUE,UAAA,mBAAmB,EAAC,QAVtB;AAWE,UAAA,iBAAiB,EAAC,QAXpB;AAAA,oBAaGE;AAbH,UADF,EAgBGL,QAAQ,GACP,KAAC,IAAD;AACE,UAAA,KAAK,EAAE,CAACW,MAAM,CAACX,QAAR,EAAkB;AAAEP,YAAAA,KAAK,EAAEc;AAAT,WAAlB,EAA4CN,aAA5C,CADT;AAEE,UAAA,aAAa,EAAE,CAFjB;AAAA,oBAIGD;AAJH,UADO,GAOL,IAvBN;AAAA,QADF;AA2BD;;;;EA/CyBR,KAAK,CAAC0B,S;;AAA5BrB,a,CACGsB,W,GAAc,gB;AAiDvB,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,iBAAiB,EAAE;AAFV,GADoB;AAK/BlB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,QAAQ,EAAEV,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AADlC,GALwB;AAQ/Bf,EAAAA,QAAQ,EAAE;AACRwB,IAAAA,QAAQ,EAAEV,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;AAD/B;AARqB,CAAlB,CAAf;AAaA,eAAepB,SAAS,CAACE,aAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, Platform } from 'react-native';\r\nimport color from 'color';\r\n\r\nimport Text from '../Typography/Text';\r\n\r\nimport { withTheme } from '../../core/theming';\r\nimport { black } from '../../styles/colors';\r\n\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * CUstom color for the text.\r\n   */\r\n  color?: string,\r\n  /**\r\n   * Text for the title.\r\n   */\r\n  title: React.Node,\r\n  /**\r\n   * Style for the title.\r\n   */\r\n  titleStyle?: any,\r\n  /**\r\n   * Text for the subtitle.\r\n   */\r\n  subtitle?: React.Node,\r\n  /**\r\n   * Style for the subtitle.\r\n   */\r\n  subtitleStyle?: any,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * A component used to display a title and optional subtitle in a appbar.\r\n */\r\nclass AppbarContent extends React.Component<Props> {\r\n  static displayName = 'Appbar.Content';\r\n\r\n  render() {\r\n    const {\r\n      color: titleColor = black,\r\n      subtitle,\r\n      subtitleStyle,\r\n      style,\r\n      titleStyle,\r\n      theme,\r\n      title,\r\n    } = this.props;\r\n    const { fonts } = theme;\r\n\r\n    const subtitleColor = color(titleColor)\r\n      .alpha(0.7)\r\n      .rgb()\r\n      .string();\r\n\r\n    return (\r\n      <View style={[styles.container, style]}>\r\n        <Text\r\n          style={[\r\n            {\r\n              color: titleColor,\r\n              fontFamily: Platform.OS === 'ios' ? fonts.regular : fonts.medium,\r\n            },\r\n            styles.title,\r\n            titleStyle,\r\n          ]}\r\n          numberOfLines={1}\r\n          accessibilityTraits=\"header\"\r\n          accessibilityRole=\"header\"\r\n        >\r\n          {title}\r\n        </Text>\r\n        {subtitle ? (\r\n          <Text\r\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\r\n            numberOfLines={1}\r\n          >\r\n            {subtitle}\r\n          </Text>\r\n        ) : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 12,\r\n  },\r\n  title: {\r\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\r\n  },\r\n  subtitle: {\r\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\r\n  },\r\n});\r\n\r\nexport default withTheme(AppbarContent);\r\n"]},"metadata":{},"sourceType":"module"}