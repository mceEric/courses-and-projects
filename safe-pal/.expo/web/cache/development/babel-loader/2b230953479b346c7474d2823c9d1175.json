{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SettingScreen } from \"./screens/SettingScreen\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { MapScreen } from \"./screens/MapScreen\";\nimport { FriendsScreen } from \"./screens/FriendRequestsScreen\";\nimport React from \"react\";\nimport { auth, realtimeDatabase } from \"./firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport function NavigateTabs(_ref) {\n  var navigation = _ref.navigation;\n  var node = realtimeDatabase.ref(\"users\");\n\n  function getRequestList() {\n    var currentNode = node.child(auth.currentUser.displayName);\n    var requestzList = [];\n    currentNode.child(\"friendRequests\").child(\"received\").once('value', function (snapshot) {\n      snapshot.forEach(function (child) {\n        requestzList.push({\n          name: child.key,\n          friendId: child.val().friendId\n        });\n      });\n    });\n    return requestzList;\n  }\n\n  function getFriendList() {\n    var currentNode = node.child(auth.currentUser.displayName);\n    var friendsList = [];\n    currentNode.child(\"friendList\").on('value', function (snapshot) {\n      snapshot.forEach(function (child) {\n        friendsList.push({\n          name: child.key,\n          friendId: child.val()[0]\n        });\n      });\n    });\n    return friendsList;\n  }\n\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      \"tabBarShowLabel\": false,\n      \"tabBarStyle\": [{\n        \"display\": \"flex\"\n      }, null]\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Map\",\n      component: MapScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return _jsxs(View, {\n            style: {\n              alignItems: 'center',\n              justifyContent: 'center',\n              top: 10\n            },\n            children: [_jsx(Image, {\n              source: require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/Home.png'),\n              resizeMode: \"contain\",\n              style: {\n                width: 25,\n                height: 25\n              }\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#daa520' : 'black',\n                fontSize: 12\n              },\n              children: \"Home\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Friends\",\n      component: FriendsScreen,\n      initialParams: {\n        friendList: getFriendList(),\n        requestList: getRequestList()\n      },\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsxs(View, {\n            style: {\n              alignItems: 'center',\n              justifyContent: 'center',\n              top: 10\n            },\n            children: [_jsx(Image, {\n              source: require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/friends-icon.png'),\n              resizeMode: \"contain\",\n              style: {\n                width: 25,\n                height: 25\n              }\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#daa520' : 'black',\n                fontSize: 12\n              },\n              children: \"Friends\"\n            })]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Settings\",\n      component: SettingScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused;\n          return _jsxs(View, {\n            style: {\n              alignItems: 'center',\n              justifyContent: 'center',\n              top: 10\n            },\n            children: [_jsx(Image, {\n              source: require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/setting.png'),\n              resizeMode: \"contain\",\n              style: {\n                width: 25,\n                height: 25\n              }\n            }), _jsx(Text, {\n              style: {\n                color: focused ? '#daa520' : 'black',\n                fontSize: 12\n              },\n              children: \"Settings\"\n            })]\n          });\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/NavigateTabs.js"],"names":["createBottomTabNavigator","SettingScreen","MapScreen","FriendsScreen","React","auth","realtimeDatabase","Tab","NavigateTabs","navigation","node","ref","getRequestList","currentNode","child","currentUser","displayName","requestzList","once","snapshot","forEach","push","name","key","friendId","val","getFriendList","friendsList","on","tabBarIcon","focused","alignItems","justifyContent","top","require","width","height","color","fontSize","friendList","requestList"],"mappings":"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","sourcesContent":["import {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\r\nimport {SettingScreen} from './screens/SettingScreen';\r\nimport {Text, View, Image} from 'react-native';\r\nimport {MapScreen} from \"./screens/MapScreen\";\r\nimport {FriendsScreen} from './screens/FriendRequestsScreen';\r\nimport React from \"react\";\r\nimport {auth, realtimeDatabase} from \"./firebase\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n//Functional component to render the navigation menu at the bottom of the screen\r\nexport function NavigateTabs({navigation}) {\r\n    const node = realtimeDatabase.ref(\"users\")\r\n\r\n    //Function to create the request list\r\n    function getRequestList() {\r\n        const currentNode = node.child(auth.currentUser.displayName);\r\n        const requestzList = [];\r\n        currentNode.child(\"friendRequests\").child(\"received\").once('value', snapshot => {\r\n            snapshot.forEach(child => {\r\n                //Push necessary data of the request user to an array\r\n                requestzList.push({ name: child.key, friendId: child.val().friendId });\r\n            });\r\n        });\r\n        return requestzList;\r\n    }\r\n\r\n    //Function to get friend list\r\n    function getFriendList() {\r\n        const currentNode = node.child(auth.currentUser.displayName);\r\n        const friendsList = [];\r\n        currentNode.child(\"friendList\").on('value', function(snapshot) {\r\n            snapshot.forEach(child => {\r\n                //Push necessary data of the friend to an array\r\n                friendsList.push({ name: child.key, friendId: child.val()[0] });\r\n            });\r\n        });\r\n        return friendsList\r\n    }\r\n\r\n    return(\r\n        //Creates tab navigation menu\r\n        <Tab.Navigator\r\n            screenOptions={{\"tabBarShowLabel\": false,\r\n            \"tabBarStyle\": [\r\n                {\r\n                    \"display\": \"flex\"\r\n                },\r\n                null\r\n            ]}}>\r\n            <Tab.Screen\r\n            //Navigation tab formap screen\r\n                name=\"Map\"\r\n                component={MapScreen}\r\n                options={{\r\n                    tabBarIcon: ({focused}) => (\r\n                        <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\r\n                            <Image\r\n                                source={require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/Home.png')}\r\n                                resizeMode=\"contain\"\r\n                                style={{\r\n                                    width: 25,\r\n                                    height: 25,\r\n                                }}\r\n                            />\r\n                            <Text\r\n                                style={{color: focused ? '#daa520' : 'black', fontSize: 12}}>\r\n                                Home\r\n                            </Text>\r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n\r\n            <Tab.Screen\r\n            //Navigation tab for friend screen\r\n                name=\"Friends\"\r\n                component={FriendsScreen}\r\n                //Passes friend list and request list to friend screen\r\n                initialParams={{friendList: getFriendList(), requestList: getRequestList()}}\r\n                options={{\r\n                    tabBarIcon: ({focused}) => (\r\n                        <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\r\n                            <Image\r\n                                source={require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/friends-icon.png')}\r\n                                resizeMode=\"contain\"\r\n                                style={{\r\n                                    width: 25,\r\n                                    height: 25,\r\n                                }}\r\n                            />\r\n                            <Text\r\n                                style={{color: focused ? '#daa520' : 'black', fontSize: 12}}>\r\n                                Friends\r\n                            </Text>\r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n\r\n            <Tab.Screen\r\n            //Navigation tab for settings screen\r\n                name=\"Settings\"\r\n                component={SettingScreen}\r\n                options={{\r\n                    tabBarIcon: ({focused}) => (\r\n                        <View style={{alignItems: 'center', justifyContent: 'center', top: 10}}>\r\n                            <Image\r\n                                source={require('C:/projectpog/2022-ca326-travel-guide/MapDisplay/images/setting.png')}\r\n                                resizeMode=\"contain\"\r\n                                style={{\r\n                                    width: 25,\r\n                                    height: 25,\r\n                                }}\r\n                            />\r\n                            <Text\r\n                                style={{color: focused ? '#daa520' : 'black', fontSize: 12}}>\r\n                                Settings\r\n                            </Text>\r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n\r\n        </Tab.Navigator>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}