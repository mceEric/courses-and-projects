{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"title\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../Typography/Text\";\nimport Divider from \"../Divider\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DrawerSection = function (_React$Component) {\n  _inherits(DrawerSection, _React$Component);\n\n  var _super = _createSuper(DrawerSection);\n\n  function DrawerSection() {\n    _classCallCheck(this, DrawerSection);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawerSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          title = _this$props.title,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var titleColor = color(colors.text).alpha(0.54).rgb().string();\n      var fontFamily = fonts.medium;\n      return _jsxs(View, _objectSpread(_objectSpread({}, rest), {}, {\n        children: [title && _jsx(View, {\n          style: {\n            height: 40,\n            justifyContent: 'center'\n          },\n          children: _jsx(Text, {\n            numberOfLines: 1,\n            style: {\n              color: titleColor,\n              fontFamily: fontFamily,\n              marginLeft: 16\n            },\n            children: title\n          })\n        }), children, _jsx(Divider, {\n          style: {\n            marginVertical: 4\n          }\n        })]\n      }));\n    }\n  }]);\n\n  return DrawerSection;\n}(React.Component);\n\nDrawerSection.displayName = 'Drawer.Section';\nexport default withTheme(DrawerSection);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Drawer/DrawerSection.js"],"names":["color","React","Text","Divider","withTheme","DrawerSection","props","children","title","theme","rest","colors","fonts","titleColor","text","alpha","rgb","string","fontFamily","medium","height","justifyContent","marginLeft","marginVertical","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;;;;IAoDMC,a;;;;;;;;;;;;;WAGJ,kBAAS;AACP,wBAA4C,KAAKC,KAAjD;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AAAA,UAAyBC,KAAzB,eAAyBA,KAAzB;AAAA,UAAmCC,IAAnC;;AACA,UAAQC,MAAR,GAA0BF,KAA1B,CAAQE,MAAR;AAAA,UAAgBC,KAAhB,GAA0BH,KAA1B,CAAgBG,KAAhB;AACA,UAAMC,UAAU,GAAGb,KAAK,CAACW,MAAM,CAACG,IAAR,CAAL,CAChBC,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;AAIA,UAAMC,UAAU,GAAGN,KAAK,CAACO,MAAzB;AAEA,aACE,MAAC,IAAD,kCAAUT,IAAV;AAAA,mBACGF,KAAK,IACJ,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEY,YAAAA,MAAM,EAAE,EAAV;AAAcC,YAAAA,cAAc,EAAE;AAA9B,WAAb;AAAA,oBACE,KAAC,IAAD;AACE,YAAA,aAAa,EAAE,CADjB;AAEE,YAAA,KAAK,EAAE;AAAErB,cAAAA,KAAK,EAAEa,UAAT;AAAqBK,cAAAA,UAAU,EAAVA,UAArB;AAAiCI,cAAAA,UAAU,EAAE;AAA7C,aAFT;AAAA,sBAIGd;AAJH;AADF,UAFJ,EAWGD,QAXH,EAYE,KAAC,OAAD;AAAS,UAAA,KAAK,EAAE;AAAEgB,YAAAA,cAAc,EAAE;AAAlB;AAAhB,UAZF;AAAA,SADF;AAgBD;;;;EA5ByBtB,KAAK,CAACuB,S;;AAA5BnB,a,CACGoB,W,GAAc,gB;AA8BvB,eAAerB,SAAS,CAACC,aAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport color from 'color';\r\nimport * as React from 'react';\r\nimport { View } from 'react-native';\r\nimport Text from '../Typography/Text';\r\nimport Divider from '../Divider';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Title to show as the header for the section.\r\n   */\r\n  title?: string,\r\n  /**\r\n   * Content of the `Drawer.Section`.\r\n   */\r\n  children: React.Node,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * A component to group content inside a navigation drawer.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Drawer } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     active: 'first',\r\n *   };\r\n *\r\n *   render() {\r\n *     const { active } = this.state;\r\n *\r\n *     return (\r\n *       <Drawer.Section title=\"Some title\">\r\n *         <Drawer.Item\r\n *           label=\"First Item\"\r\n *           active={active === 'first'}\r\n *           onPress={() => { this.setState({ active: 'first' }); }}\r\n *         />\r\n *         <Drawer.Item\r\n *           label=\"Second Item\"\r\n *           active={active === 'second'}\r\n *           onPress={() => { this.setState({ active: 'second' }); }}\r\n *         />\r\n *      </Drawer.Section>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nclass DrawerSection extends React.Component<Props> {\r\n  static displayName = 'Drawer.Section';\r\n\r\n  render() {\r\n    const { children, title, theme, ...rest } = this.props;\r\n    const { colors, fonts } = theme;\r\n    const titleColor = color(colors.text)\r\n      .alpha(0.54)\r\n      .rgb()\r\n      .string();\r\n    const fontFamily = fonts.medium;\r\n\r\n    return (\r\n      <View {...rest}>\r\n        {title && (\r\n          <View style={{ height: 40, justifyContent: 'center' }}>\r\n            <Text\r\n              numberOfLines={1}\r\n              style={{ color: titleColor, fontFamily, marginLeft: 16 }}\r\n            >\r\n              {title}\r\n            </Text>\r\n          </View>\r\n        )}\r\n        {children}\r\n        <Divider style={{ marginVertical: 4 }} />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(DrawerSection);\r\n"]},"metadata":{},"sourceType":"module"}