{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FABGroup = function (_React$Component) {\n  _inherits(FABGroup, _React$Component);\n\n  var _super = _createSuper(FABGroup);\n\n  function FABGroup() {\n    var _this;\n\n    _classCallCheck(this, FABGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      backdrop: new Animated.Value(0),\n      animations: []\n    };\n\n    _this._close = function () {\n      return _this.props.onStateChange({\n        open: false\n      });\n    };\n\n    _this._toggle = function () {\n      return _this.props.onStateChange({\n        open: !_this.props.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FABGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.open === prevProps.open) {\n        return;\n      }\n\n      if (this.props.open) {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250,\n          useNativeDriver: true\n        }), Animated.stagger(50, this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 1,\n            duration: 150,\n            useNativeDriver: true\n          });\n        }).reverse())]).start();\n      } else {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true\n        })].concat(_toConsumableArray(this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 0,\n            duration: 150,\n            useNativeDriver: true\n          });\n        })))).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          icon = _this$props.icon,\n          open = _this$props.open,\n          _onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          theme = _this$props.theme,\n          style = _this$props.style;\n      var colors = theme.colors;\n      var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n      var backdropOpacity = open ? this.state.backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      }) : this.state.backdrop;\n      var opacities = this.state.animations;\n      var scales = opacities.map(function (opacity) {\n        return open ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        }) : 1;\n      });\n      return _jsxs(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.container, style],\n        children: [open ? _jsx(StatusBar, {\n          barStyle: \"light-content\"\n        }) : null, _jsx(TouchableWithoutFeedback, {\n          onPress: this._close,\n          children: _jsx(Animated.View, {\n            pointerEvents: open ? 'auto' : 'none',\n            style: [styles.backdrop, {\n              opacity: backdropOpacity,\n              backgroundColor: colors.backdrop\n            }]\n          })\n        }), _jsx(View, {\n          pointerEvents: open ? 'box-none' : 'none',\n          children: actions.map(function (it, i) {\n            return _jsx(Animated.View, {\n              style: [{\n                opacity: opacities[i]\n              }],\n              pointerEvents: \"box-none\",\n              children: _jsxs(View, {\n                style: styles.item,\n                pointerEvents: \"box-none\",\n                children: [it.label && _jsx(Card, {\n                  style: [styles.label, {\n                    transform: [{\n                      scale: scales[i]\n                    }]\n                  }],\n                  onPress: function onPress() {\n                    it.onPress();\n\n                    _this2._close();\n                  },\n                  accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n                  accessibilityTraits: \"button\",\n                  accessibilityComponentType: \"button\",\n                  accessibilityRole: \"button\",\n                  children: _jsx(Text, {\n                    style: {\n                      color: labelColor\n                    },\n                    children: it.label\n                  })\n                }), _jsx(FAB, {\n                  small: true,\n                  icon: it.icon,\n                  color: it.color,\n                  style: [{\n                    transform: [{\n                      scale: scales[i]\n                    }],\n                    backgroundColor: theme.colors.surface\n                  }, it.style],\n                  onPress: function onPress() {\n                    it.onPress();\n\n                    _this2._close();\n                  },\n                  accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n                  accessibilityTraits: \"button\",\n                  accessibilityComponentType: \"button\",\n                  accessibilityRole: \"button\"\n                })]\n              })\n            }, i);\n          })\n        }), _jsx(FAB, {\n          onPress: function onPress() {\n            _onPress && _onPress();\n\n            _this2._toggle();\n          },\n          icon: icon,\n          color: this.props.color,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          style: styles.fab\n        })]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        animations: nextProps.actions.map(function (_, i) {\n          return prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0);\n        })\n      };\n    }\n  }]);\n\n  return FABGroup;\n}(React.Component);\n\nFABGroup.displayName = 'FAB.Group';\npolyfill(FABGroup);\nexport default withTheme(FABGroup);\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/FAB/FABGroup.js"],"names":["React","polyfill","color","FAB","Text","Card","withTheme","FABGroup","state","backdrop","Animated","Value","animations","_close","props","onStateChange","open","_toggle","prevProps","parallel","timing","toValue","duration","useNativeDriver","stagger","map","animation","reverse","start","actions","icon","onPress","accessibilityLabel","theme","style","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","styles","container","backgroundColor","it","i","item","label","transform","scale","surface","fab","nextProps","prevState","_","Component","displayName","StyleSheet","create","absoluteFillObject","alignItems","justifyContent","marginHorizontal","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n  TouchableWithoutFeedback,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { polyfill } from 'react-lifecycles-compat';\r\nimport color from 'color';\r\nimport FAB from './FAB';\r\nimport Text from '../Typography/Text';\r\nimport Card from '../Card/Card';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\nimport type { IconSource } from '../Icon';\r\n\r\ntype Props = {\r\n  /**\r\n   * Action items to display in the form of a speed dial.\r\n   * An action item should contain the following properties:\r\n   * - `icon`: icon to display (required)\r\n   * - `label`: optional label text\r\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\r\n   * - `color`: custom icon color of the action item\r\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\r\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\r\n   */\r\n  actions: Array<{\r\n    icon: string,\r\n    label?: string,\r\n    color?: string,\r\n    accessibilityLabel?: string,\r\n    style?: any,\r\n    onPress: () => mixed,\r\n  }>,\r\n  /**\r\n   * Icon to display for the `FAB`.\r\n   * You can toggle it based on whether the speed dial is open to display a different icon.\r\n   */\r\n  icon: IconSource,\r\n  /**\r\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\r\n   */\r\n  accessibilityLabel?: string,\r\n  /**\r\n   * Custom color for the `FAB`.\r\n   */\r\n  color?: string,\r\n  /**\r\n   * Function to execute on pressing the `FAB`.\r\n   */\r\n  onPress?: () => mixed,\r\n  /**\r\n   * Whether the speed dial is open.\r\n   */\r\n  open: boolean,\r\n  /**\r\n   * Callback which is called on opening and closing the speed dial.\r\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\r\n   */\r\n  onStateChange: (state: { open: boolean }) => mixed,\r\n  /**\r\n   * Style for the group. You can use it to pass additional styles if you need.\r\n   * For example, you can set an additional margin if you have a tab bar at the bottom.\r\n   */\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\ntype State = {\r\n  backdrop: Animated.Value,\r\n  animations: Animated.Value[],\r\n};\r\n\r\n/**\r\n * A component to display a stack of FABs with related actions in a speed dial.\r\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/fab-group.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { FAB, Portal } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     open: false,\r\n *   };\r\n *\r\n *   render() {\r\n *     return (\r\n *       <Portal>\r\n *         <FAB.Group\r\n *           open={this.state.open}\r\n *           icon={this.state.open ? 'today' : 'add'}\r\n *           actions={[\r\n *             { icon: 'add', onPress: () => console.log('Pressed add') },\r\n *             { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\r\n *             { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\r\n *             { icon: 'notifications', label: 'Remind', onPress: () => console.log('Pressed notifications') },\r\n *           ]}\r\n *           onStateChange={({ open }) => this.setState({ open })}\r\n *           onPress={() => {\r\n *             if (this.state.open) {\r\n *               // do something if the speed dial is open\r\n *             }\r\n *           }}\r\n *         />\r\n *       </Portal>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nclass FABGroup extends React.Component<Props, State> {\r\n  static displayName = 'FAB.Group';\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      animations: nextProps.actions.map(\r\n        (_, i) =>\r\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\r\n      ),\r\n    };\r\n  }\r\n\r\n  state = {\r\n    backdrop: new Animated.Value(0),\r\n    animations: [],\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.open === prevProps.open) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.open) {\r\n      Animated.parallel([\r\n        Animated.timing(this.state.backdrop, {\r\n          toValue: 1,\r\n          duration: 250,\r\n          useNativeDriver: true,\r\n        }),\r\n        Animated.stagger(\r\n          50,\r\n          this.state.animations\r\n            .map(animation =>\r\n              Animated.timing(animation, {\r\n                toValue: 1,\r\n                duration: 150,\r\n                useNativeDriver: true,\r\n              })\r\n            )\r\n            .reverse()\r\n        ),\r\n      ]).start();\r\n    } else {\r\n      Animated.parallel([\r\n        Animated.timing(this.state.backdrop, {\r\n          toValue: 0,\r\n          duration: 200,\r\n          useNativeDriver: true,\r\n        }),\r\n        ...this.state.animations.map(animation =>\r\n          Animated.timing(animation, {\r\n            toValue: 0,\r\n            duration: 150,\r\n            useNativeDriver: true,\r\n          })\r\n        ),\r\n      ]).start();\r\n    }\r\n  }\r\n\r\n  _close = () => this.props.onStateChange({ open: false });\r\n\r\n  _toggle = () => this.props.onStateChange({ open: !this.props.open });\r\n\r\n  render() {\r\n    const {\r\n      actions,\r\n      icon,\r\n      open,\r\n      onPress,\r\n      accessibilityLabel,\r\n      theme,\r\n      style,\r\n    } = this.props;\r\n    const { colors } = theme;\r\n\r\n    const labelColor = theme.dark\r\n      ? colors.text\r\n      : color(colors.text)\r\n          .fade(0.54)\r\n          .rgb()\r\n          .string();\r\n    const backdropOpacity = open\r\n      ? this.state.backdrop.interpolate({\r\n          inputRange: [0, 0.5, 1],\r\n          // $FlowFixMe\r\n          outputRange: [0, 1, 1],\r\n        })\r\n      : this.state.backdrop;\r\n\r\n    const opacities = this.state.animations;\r\n    const scales = opacities.map(\r\n      opacity =>\r\n        open\r\n          ? opacity.interpolate({\r\n              inputRange: [0, 1],\r\n              // $FlowFixMe\r\n              outputRange: [0.8, 1],\r\n            })\r\n          : 1\r\n    );\r\n\r\n    return (\r\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\r\n        {open ? <StatusBar barStyle=\"light-content\" /> : null}\r\n        <TouchableWithoutFeedback onPress={this._close}>\r\n          <Animated.View\r\n            pointerEvents={open ? 'auto' : 'none'}\r\n            style={[\r\n              styles.backdrop,\r\n              {\r\n                opacity: backdropOpacity,\r\n                backgroundColor: colors.backdrop,\r\n              },\r\n            ]}\r\n          />\r\n        </TouchableWithoutFeedback>\r\n        <View pointerEvents={open ? 'box-none' : 'none'}>\r\n          {actions.map((it, i) => (\r\n            <Animated.View\r\n                key={i} //eslint-disable-line\r\n              style={[\r\n                {\r\n                  opacity: opacities[i],\r\n                },\r\n              ]}\r\n              pointerEvents=\"box-none\"\r\n            >\r\n              <View style={styles.item} pointerEvents=\"box-none\">\r\n                {it.label && (\r\n                  <Card\r\n                    style={[\r\n                      styles.label,\r\n                      { transform: [{ scale: scales[i] }] },\r\n                    ]}\r\n                    onPress={() => {\r\n                      it.onPress();\r\n                      this._close();\r\n                    }}\r\n                    accessibilityLabel={\r\n                      it.accessibilityLabel !== 'undefined'\r\n                        ? it.accessibilityLabel\r\n                        : it.label\r\n                    }\r\n                    accessibilityTraits=\"button\"\r\n                    accessibilityComponentType=\"button\"\r\n                    accessibilityRole=\"button\"\r\n                  >\r\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\r\n                  </Card>\r\n                )}\r\n                <FAB\r\n                  small\r\n                  icon={it.icon}\r\n                  color={it.color}\r\n                  style={[\r\n                    {\r\n                      transform: [{ scale: scales[i] }],\r\n                      backgroundColor: theme.colors.surface,\r\n                    },\r\n                    it.style,\r\n                  ]}\r\n                  onPress={() => {\r\n                    it.onPress();\r\n                    this._close();\r\n                  }}\r\n                  accessibilityLabel={\r\n                    typeof it.accessibilityLabel !== 'undefined'\r\n                      ? it.accessibilityLabel\r\n                      : it.label\r\n                  }\r\n                  accessibilityTraits=\"button\"\r\n                  accessibilityComponentType=\"button\"\r\n                  accessibilityRole=\"button\"\r\n                />\r\n              </View>\r\n            </Animated.View>\r\n          ))}\r\n        </View>\r\n        <FAB\r\n          onPress={() => {\r\n            onPress && onPress();\r\n            this._toggle();\r\n          }}\r\n          icon={icon}\r\n          color={this.props.color}\r\n          accessibilityLabel={accessibilityLabel}\r\n          accessibilityTraits=\"button\"\r\n          accessibilityComponentType=\"button\"\r\n          accessibilityRole=\"button\"\r\n          style={styles.fab}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\npolyfill(FABGroup);\r\n\r\nexport default withTheme(FABGroup);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  fab: {\r\n    marginHorizontal: 16,\r\n    marginBottom: 16,\r\n    marginTop: 0,\r\n  },\r\n  backdrop: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  label: {\r\n    borderRadius: 5,\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    elevation: 2,\r\n  },\r\n  item: {\r\n    marginHorizontal: 24,\r\n    marginBottom: 16,\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}