{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport shadow from \"../styles/shadow\";\nimport { withTheme } from \"../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Surface = function (_React$Component) {\n  _inherits(Surface, _React$Component);\n\n  var _super = _createSuper(Surface);\n\n  function Surface() {\n    _classCallCheck(this, Surface);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Surface, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var flattenedStyles = StyleSheet.flatten(style) || {};\n      var elevation = flattenedStyles.elevation;\n      return _jsx(Animated.View, _objectSpread(_objectSpread({}, rest), {}, {\n        style: [{\n          backgroundColor: theme.colors.surface\n        }, elevation && shadow(elevation), style]\n      }));\n    }\n  }]);\n\n  return Surface;\n}(React.Component);\n\nexport default withTheme(Surface);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Surface.js"],"names":["React","shadow","withTheme","Surface","props","style","theme","rest","flattenedStyles","StyleSheet","flatten","elevation","backgroundColor","colors","surface","Component"],"mappings":";;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,MAAP;AACA,SAASC,SAAT;;;IAmDMC,O;;;;;;;;;;;;;WACJ,kBAAS;AACP,wBAAkC,KAAKC,KAAvC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,KAAf,eAAeA,KAAf;AAAA,UAAyBC,IAAzB;;AACA,UAAMC,eAAe,GAAGC,UAAU,CAACC,OAAX,CAAmBL,KAAnB,KAA6B,EAArD;AACA,UAAQM,SAAR,GAAsBH,eAAtB,CAAQG,SAAR;AAEA,aACE,KAAC,QAAD,CAAU,IAAV,kCACMJ,IADN;AAEE,QAAA,KAAK,EAAE,CACL;AAAEK,UAAAA,eAAe,EAAEN,KAAK,CAACO,MAAN,CAAaC;AAAhC,SADK,EAELH,SAAS,IAAIV,MAAM,CAACU,SAAD,CAFd,EAGLN,KAHK;AAFT,SADF;AAUD;;;;EAhBmBL,KAAK,CAACe,S;;AAmB5B,eAAeb,SAAS,CAACC,OAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { Animated, StyleSheet } from 'react-native';\r\nimport shadow from '../styles/shadow';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Content of the `Surface`.\r\n   */\r\n  children: React.Node,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * Surface is a basic container that can give depth to an element with elevation shadow.\r\n * A shadow can be applied by specifying the `elevation` property both on Android and iOS.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/surface-1.png\" />\r\n *   <img src=\"screenshots/surface-2.png\" />\r\n *   <img src=\"screenshots/surface-3.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Surface, Text } from 'react-native-paper';\r\n * import { StyleSheet } from 'react-native';\r\n *\r\n * const MyComponent = () => (\r\n *   <Surface style={styles.surface}>\r\n *      <Text>Surface</Text>\r\n *   </Surface>\r\n * );\r\n *\r\n * export default MyComponent;\r\n *\r\n * const styles = StyleSheet.create({\r\n *   surface: {\r\n *     padding: 8,\r\n *     height: 80,\r\n *     width: 80,\r\n *     alignItems: 'center',\r\n *     justifyContent: 'center',\r\n *     elevation: 4,\r\n *   },\r\n * });\r\n * ```\r\n */\r\nclass Surface extends React.Component<Props> {\r\n  render() {\r\n    const { style, theme, ...rest } = this.props;\r\n    const flattenedStyles = StyleSheet.flatten(style) || {};\r\n    const { elevation } = flattenedStyles;\r\n\r\n    return (\r\n      <Animated.View\r\n        {...rest}\r\n        style={[\r\n          { backgroundColor: theme.colors.surface },\r\n          elevation && shadow(elevation),\r\n          style,\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Surface);\r\n"]},"metadata":{},"sourceType":"module"}