{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport PortalConsumer from \"./PortalConsumer\";\nimport PortalHost, { PortalContext } from \"./PortalHost\";\nimport { ThemeProvider, withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Portal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _children = _this$props.children,\n          theme = _this$props.theme;\n      return _jsx(PortalContext.Consumer, {\n        children: function children(manager) {\n          return _jsx(PortalConsumer, {\n            manager: manager,\n            children: _jsx(ThemeProvider, {\n              theme: theme,\n              children: _children\n            })\n          });\n        }\n      });\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nPortal.Host = PortalHost;\nexport default withTheme(Portal);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Portal/Portal.js"],"names":["React","PortalConsumer","PortalHost","PortalContext","ThemeProvider","withTheme","Portal","props","children","theme","manager","Component","Host"],"mappings":";;;;;;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP,IAAqBC,aAArB;AACA,SAASC,aAAT,EAAwBC,SAAxB;;;IAoCMC,M;;;;;;;;;;;;;WAIJ,kBAAS;AACP,wBAA4B,KAAKC,KAAjC;AAAA,UAAQC,SAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AAEA,aACE,KAAC,aAAD,CAAe,QAAf;AAAA,kBACG,kBAAAC,OAAO;AAAA,iBACN,KAAC,cAAD;AAAgB,YAAA,OAAO,EAAEA,OAAzB;AAAA,sBACE,KAAC,aAAD;AAAe,cAAA,KAAK,EAAED,KAAtB;AAAA,wBAA8BD;AAA9B;AADF,YADM;AAAA;AADV,QADF;AASD;;;;EAhBkBR,KAAK,CAACW,S;;AAArBL,M,CAEGM,I,GAAOV,U;AAiBhB,eAAeG,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["/* @flow */\r\n/* eslint-disable react/no-unused-prop-types */\r\n\r\nimport * as React from 'react';\r\nimport PortalConsumer from './PortalConsumer';\r\nimport PortalHost, { PortalContext } from './PortalHost';\r\nimport { ThemeProvider, withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Content of the `Portal`.\r\n   */\r\n  children: React.Node,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * Portal allows to render a component at a different place in the parent tree.\r\n * You can use it to render content which should appear above other elements, similar to `Modal`.\r\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Portal, Text } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   render() {\r\n *     const { visible } = this.state;\r\n *     return (\r\n *       <Portal>\r\n *         <Text>This is rendered at a different place</Text>\r\n *       </Portal>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nclass Portal extends React.Component<Props> {\r\n  // @component ./PortalHost.js\r\n  static Host = PortalHost;\r\n\r\n  render() {\r\n    const { children, theme } = this.props;\r\n\r\n    return (\r\n      <PortalContext.Consumer>\r\n        {manager => (\r\n          <PortalConsumer manager={manager}>\r\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n          </PortalConsumer>\r\n        )}\r\n      </PortalContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTheme(Portal);\r\n"]},"metadata":{},"sourceType":"module"}