{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport MapView, { PROVIDER_GOOGLE, Marker, Callout } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport * as Location from 'expo-location';\nimport { GeoFire } from 'geofire';\nimport { realtimeDatabase, auth } from \"../firebase\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function MapScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      faultMessage = _useState4[0],\n      setFaultMessage = _useState4[1];\n\n  var _useState5 = useState({\n    directions: null,\n    name: null\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      directions = _useState6[0],\n      setDirections = _useState6[1];\n\n  var _useState7 = useState(getFriendsPositions()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      friendsPosition = _useState8[0],\n      setFriendsPosition = _useState8[1];\n\n  var colors = ['blue', 'green', 'purple', 'teal', 'indigo', 'aqua', '#000000', '#ff69b4'];\n  var color = '#daa520';\n  realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").once('value', function (snapshot) {\n    color = snapshot.val();\n  });\n\n  var _useState9 = useState(color),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alertStatus = _useState10[0],\n      setAlertStatus = _useState10[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return alertStatus !== \"red\" ? _jsx(TouchableOpacity, {\n          style: [style.button, {\n            backgroundColor: '#daa520'\n          }],\n          onPress: function onPress() {\n            return alertPrompt();\n          },\n          children: _jsx(Text, {\n            children: \"Send Alert\"\n          })\n        }) : _jsx(TouchableOpacity, {\n          style: [style.button, {\n            backgroundColor: 'red'\n          }],\n          onPress: function onPress() {\n            return removeAlert();\n          },\n          children: _jsx(Text, {\n            children: \"Remove Alert\"\n          })\n        });\n      }\n    });\n  }, [alertStatus]);\n  useEffect(function _callee() {\n    var unmounted, _await$Location$reque, status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            unmounted = false;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context.next = 8;\n              break;\n            }\n\n            setFaultMessage('Permission to access location was denied, please go to settings and enable location access.');\n            return _context.abrupt(\"return\");\n\n          case 8:\n            if (unmounted) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Location.watchPositionAsync({\n              timeInterval: 0,\n              enableHighAccuracy: true\n            }, function (newPosition) {\n              return setPosition(newPosition.coords);\n            }));\n\n          case 11:\n            if (friendsPosition.filter(function (friend) {\n              return friend.friendName === directions.name;\n            }).push(\"ds\") === 1) {\n              removeDirections();\n            }\n\n          case 12:\n            console.log(\"yop thehi lads\");\n            return _context.abrupt(\"return\", function () {\n              {\n                unmounted = true;\n              }\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  if (faultMessage) {\n    alert(faultMessage);\n  } else if (position) {\n    var geoFireInst = new GeoFire(realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName));\n    geoFireInst.set(\"Location\", [position.latitude, position.longitude]);\n  }\n\n  setInterval(function () {\n    return console.log(\"yogfyip the ladz\");\n  }, 5000);\n\n  function handleDirections(friend, newColor) {\n    setDirections({\n      directions: _jsx(MapViewDirections, {\n        origin: {\n          latitude: position.latitude,\n          longitude: position.longitude\n        },\n        destination: {\n          latitude: friend.latitude,\n          longitude: friend.longitude\n        },\n        apikey: \"AIzaSyCTxGJm9AaJcJ_LeHTBXtkFQNIjijOuPU0\",\n        strokeWidth: 3,\n        strokeColor: newColor\n      }),\n      name: friend.friendName\n    });\n  }\n\n  function removeDirections() {\n    setDirections({\n      directions: null,\n      name: null\n    });\n  }\n\n  function getFriendsPositions() {\n    var friendsLocations = [];\n    realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"sharedLocations\").once(\"value\", function (snapshot) {\n      snapshot.forEach(function (child) {\n        realtimeDatabase.ref(\"users\").child(child.key).once(\"value\", function (snapshot) {\n          friendsLocations.push({\n            friendName: child.key,\n            alertStatus: snapshot.child(\"alertStatus\").val(),\n            latitude: snapshot.child(\"Location\").child(\"l\").val()[0],\n            longitude: snapshot.child(\"Location\").child(\"l\").val()[1]\n          });\n        });\n      });\n    });\n    return friendsLocations;\n  }\n\n  function alertPrompt() {\n    Alert.alert(\"Alert\", \"Are you sure you would like to send an alert to all shared location friends?\", [{\n      text: \"No\",\n      style: \"cancel\"\n    }, {\n      text: \"Yes\",\n      onPress: function onPress() {\n        return alertFriends();\n      }\n    }]);\n  }\n\n  function randomColour() {\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  function alertFriends() {\n    realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").set(\"red\");\n    setAlertStatus(\"red\");\n  }\n\n  function removeAlert() {\n    var newColor = randomColour();\n    realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").set(newColor);\n    setAlertStatus(newColor);\n  }\n\n  return _jsx(View, {\n    style: style.container,\n    children: _jsxs(MapView, {\n      showsMyLocationButton: true,\n      style: StyleSheet.absoluteFillObject,\n      provider: PROVIDER_GOOGLE,\n      showsUserLocation: true,\n      loadingEnabled: true,\n      customMapStyle: mapStyle,\n      children: [friendsPosition.map(function (friendQ) {\n        var friend = friendQ;\n        return _jsx(Marker, {\n          coordinate: {\n            latitude: friend.latitude,\n            longitude: friend.longitude\n          },\n          pinColor: friend.alertStatus,\n          children: _jsx(Callout, {\n            onPress: function onPress() {\n              return directions.directions === null ? handleDirections(friend, friend.alertStatus) : removeDirections();\n            },\n            children: _jsxs(Text, {\n              children: [directions.directions === null ? 'Get Directions to' : 'Remove Directions from', \" \", friend.friendName]\n            })\n          })\n        }, friend.name + JSON.stringify(friend.latitude + friend.longitude));\n      }), directions.directions]\n    })\n  });\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  button: {\n    height: 30,\n    width: 100,\n    marginTop: 5,\n    marginRight: 15,\n    borderRadius: 15,\n    borderWidth: 3,\n    justifyContent: \"center\",\n    alignItems: 'center'\n  }\n});\nvar mapStyle = [{\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#daa520\"\n  }]\n}, {\n  elementType: \"geometry.fill\",\n  stylers: [{\n    saturation: -5\n  }, {\n    lightness: -5\n  }]\n}, {\n  elementType: \"labels.icon\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#000000\"\n  }]\n}, {\n  featureType: \"administrative\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"administrative.country\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"administrative.land_parcel\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"administrative.locality\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"poi\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"poi.business\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"labels.text\",\n  stylers: [{\n    visibility: \"off\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"poi.park\",\n  elementType: \"labels.text.stroke\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"road\",\n  stylers: [{\n    visibility: \"on\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"geometry.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"road\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"road.arterial\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"road.highway\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"road.highway.controlled_access\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"road.local\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"transit\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"geometry\",\n  stylers: [{\n    color: \"#262525\"\n  }]\n}, {\n  featureType: \"water\",\n  elementType: \"labels.text.fill\",\n  stylers: [{\n    color: \"#ffffff\"\n  }]\n}];","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/screens/MapScreen.js"],"names":["React","MapView","PROVIDER_GOOGLE","Marker","Callout","useState","useEffect","useLayoutEffect","Location","GeoFire","realtimeDatabase","auth","MapViewDirections","useNavigation","MapScreen","position","setPosition","navigation","faultMessage","setFaultMessage","directions","name","setDirections","getFriendsPositions","friendsPosition","setFriendsPosition","colors","color","ref","child","currentUser","displayName","once","snapshot","val","alertStatus","setAlertStatus","setOptions","headerRight","style","button","backgroundColor","alertPrompt","removeAlert","unmounted","requestForegroundPermissionsAsync","status","watchPositionAsync","timeInterval","enableHighAccuracy","newPosition","coords","filter","friend","friendName","push","removeDirections","console","log","alert","geoFireInst","set","latitude","longitude","setInterval","handleDirections","newColor","friendsLocations","forEach","key","Alert","text","onPress","alertFriends","randomColour","Math","floor","random","length","container","StyleSheet","absoluteFillObject","mapStyle","map","friendQ","JSON","stringify","create","flex","justifyContent","alignContent","height","width","marginTop","marginRight","borderRadius","borderWidth","alignItems","elementType","stylers","saturation","lightness","visibility","featureType"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MapView, {PROVIDER_GOOGLE, Marker, Callout} from 'react-native-maps';\r\nimport {StyleSheet, View, Text, TouchableOpacity, Alert} from 'react-native'\r\nimport {useState, useEffect, useLayoutEffect} from \"react\";\r\nimport * as Location from 'expo-location';\r\nimport {GeoFire} from 'geofire';\r\nimport {realtimeDatabase, auth} from \"../firebase\";\r\nimport MapViewDirections from \"react-native-maps-directions\";\r\nimport {useNavigation} from \"@react-navigation/native\";\r\n\r\n//This functional component will render the map screen\r\nexport function MapScreen() {\r\n    //Declaring necessary states\r\n    const [position, setPosition] = useState(null);\r\n    const navigation = useNavigation();\r\n    const [faultMessage, setFaultMessage] = useState(null);\r\n    const [directions, setDirections] = useState({directions: null, name: null});\r\n    const [friendsPosition, setFriendsPosition] = useState(getFriendsPositions());\r\n    const colors = ['blue', 'green', 'purple', 'teal', 'indigo', 'aqua', '#000000', '#ff69b4']\r\n    let color = '#daa520'\r\n    realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").once('value', function(snapshot) {\r\n      color = snapshot.val()\r\n      \r\n    })\r\n    const [alertStatus, setAlertStatus] = useState(color)\r\n\r\n    //A layout affect that will set the alert button to correspond to the current users alert status\r\n    useLayoutEffect(() => {\r\n      navigation.setOptions({\r\n          headerRight: () => (\r\n              alertStatus !== \"red\" ?\r\n                  <TouchableOpacity style={[style.button, {backgroundColor: '#daa520'}]} onPress={() => alertPrompt()}>\r\n                    <Text>Send Alert</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  :\r\n\r\n                  <TouchableOpacity style={[style.button, {backgroundColor: 'red'}]} onPress={() => removeAlert()}>\r\n                    <Text>Remove Alert</Text>\r\n                  </TouchableOpacity>\r\n          ),\r\n      })\r\n  }, [alertStatus])\r\n\r\n    //An asynchronous useEffect\r\n    useEffect( async() => {\r\n        let unmounted = false;\r\n        //Ask user for permission to access their location\r\n        let { status } = await Location.requestForegroundPermissionsAsync();\r\n        //If user reject permission request we will set a new state, then alert them with the following message\r\n        if (status !== 'granted') {\r\n          setFaultMessage('Permission to access location was denied, please go to settings and enable location access.');\r\n          return;\r\n        }\r\n        \r\n        if (!unmounted) {\r\n          //An asyncrhonous call back function to watch current users position\r\n          await Location.watchPositionAsync({ timeInterval : 0, enableHighAccuracy: true},\r\n            newPosition => setPosition(newPosition.coords),\r\n            );\r\n          //Set new state to all shared friends locations if shared friends location has changed\r\n          //if (friendsPosition !== getFriendsPositions()) {\r\n            //setFriendsPosition(getFriendsPositions())\r\n          //}\r\n          //If specific friend has been removed from shared location, remove the direction/route to them if it is set.\r\n          if (friendsPosition.filter(friend => friend.friendName === directions.name).push(\"ds\") === 1) {\r\n            removeDirections();\r\n          }\r\n\r\n        }\r\n        console.log(\"yop thehi lads\")\r\n        return () =>  {\r\n          { unmounted = true }\r\n        }\r\n\r\n      }, []);\r\n      \r\n    //The alert for rejected location permission\r\n    if (faultMessage) {\r\n      alert(faultMessage)\r\n    } \r\n    //If permission was accepted, push co-ordinates to the firebase \"Location\" node\r\n    else if (position) {\r\n          const geoFireInst = new GeoFire(realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName));\r\n          geoFireInst.set(\"Location\", [position.latitude, position.longitude])\r\n      }\r\n\r\n      setInterval(() => console.log(\"yogfyip the ladz\"), 5000)\r\n    \r\n    //Cunction to get directions from current user to specefied friend\r\n    function handleDirections(friend, newColor) {\r\n      setDirections({directions: (<MapViewDirections\r\n        //Current users location\r\n        origin={{latitude: position.latitude, longitude: position.longitude}}\r\n        //Specified users location\r\n        destination={{latitude: friend.latitude, longitude: friend.longitude}}\r\n        apikey=\"AIzaSyCTxGJm9AaJcJ_LeHTBXtkFQNIjijOuPU0\"\r\n        strokeWidth={3}\r\n        strokeColor={newColor}\r\n        />), name: friend.friendName})\r\n    }\r\n\r\n    //Function to remove directions/route\r\n    function removeDirections() {\r\n      setDirections({directions: null, name: null})\r\n    }\r\n\r\n    //This function will get all shared friends locations\r\n    function getFriendsPositions() {\r\n      let friendsLocations = []\r\n        realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"sharedLocations\").once(\"value\", function(snapshot) {\r\n          snapshot.forEach(child => {\r\n            realtimeDatabase.ref(\"users\").child(child.key).once(\"value\", function(snapshot) {\r\n              friendsLocations.push({friendName: child.key, alertStatus: snapshot.child(\"alertStatus\").val(), latitude: snapshot.child(\"Location\").child(\"l\").val()[0], longitude: snapshot.child(\"Location\").child(\"l\").val()[1]})\r\n            })\r\n        })\r\n      })\r\n      return friendsLocations\r\n    }\r\n\r\n    //Function which will set an alert and if accepted will call alertFriends()\r\n    function alertPrompt() {\r\n        Alert.alert(\r\n          \"Alert\",\r\n          \"Are you sure you would like to send an alert to all shared location friends?\",\r\n          [\r\n              {\r\n                  text: \"No\",\r\n                  style: \"cancel\"\r\n              },\r\n              {\r\n                  text: \"Yes\",\r\n                  onPress: () => alertFriends()\r\n              }\r\n          ]\r\n       )\r\n    }\r\n\r\n    //Gets a random element from the colors array(gets a random color)\r\n    function randomColour() {\r\n      return colors[Math.floor(Math.random() * colors.length)]\r\n    }\r\n\r\n    //This function will set alert status as red, in other words the current user has sent an alert as they are in a potentially dangerous situation\r\n    function alertFriends() {\r\n      realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").set(\"red\")\r\n      setAlertStatus(\"red\")\r\n    }\r\n\r\n    //removes the alert outlined above, and sets a new color relative to the user\r\n    function removeAlert() {\r\n      let newColor = randomColour()\r\n      realtimeDatabase.ref(\"users\").child(auth.currentUser.displayName).child(\"alertStatus\").set(newColor)\r\n      setAlertStatus(newColor)\r\n    }\r\n\r\n    return (\r\n        <View style={style.container}>\r\n            <MapView\r\n                showsMyLocationButton={true}\r\n                style={StyleSheet.absoluteFillObject}\r\n                provider={PROVIDER_GOOGLE}\r\n                showsUserLocation={true}\r\n                loadingEnabled={true}\r\n                customMapStyle={mapStyle}\r\n            >\r\n                {friendsPosition.map((friendQ) => {\r\n                  const friend = friendQ;\r\n                  return(<Marker key={friend.name + JSON.stringify(friend.latitude + friend. longitude)} coordinate = {{latitude:  friend.latitude, longitude: friend.longitude}} pinColor={friend.alertStatus}><Callout onPress={() => (directions.directions === null ? handleDirections(friend, friend.alertStatus) : removeDirections())}><Text>{directions.directions === null ? 'Get Directions to' : 'Remove Directions from'} {friend.friendName}</Text></Callout></Marker>)\r\n                })}\r\n                {directions.directions}\r\n            </MapView>\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\"\r\n    },\r\n\r\n    button: {\r\n      height: 30,\r\n      width: 100,\r\n      marginTop: 5,\r\n      marginRight: 15,\r\n      borderRadius: 15,\r\n      borderWidth: 3,\r\n      justifyContent: \"center\",\r\n      alignItems: 'center',\r\n  },\r\n\r\n})\r\n\r\n//Inspired by *\r\nconst mapStyle = [\r\n  {\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#daa520\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        saturation: -5,\r\n      },\r\n      {\r\n        lightness: -5,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#000000\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.country\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.land_parcel\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"administrative.locality\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.business\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi.park\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway.controlled_access\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.local\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        color: \"#262525\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];"]},"metadata":{},"sourceType":"module"}