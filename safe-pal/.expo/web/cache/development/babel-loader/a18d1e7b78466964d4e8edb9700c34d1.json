{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PortalManager = function (_React$PureComponent) {\n  _inherits(PortalManager, _React$PureComponent);\n\n  var _super = _createSuper(PortalManager);\n\n  function PortalManager() {\n    var _this;\n\n    _classCallCheck(this, PortalManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      portals: []\n    };\n\n    _this.mount = function (key, children) {\n      _this.setState(function (state) {\n        return {\n          portals: [].concat(_toConsumableArray(state.portals), [{\n            key: key,\n            children: children\n          }])\n        };\n      });\n    };\n\n    _this.update = function (key, children) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.map(function (item) {\n            if (item.key === key) {\n              return _objectSpread(_objectSpread({}, item), {}, {\n                children: children\n              });\n            }\n\n            return item;\n          })\n        };\n      });\n    };\n\n    _this.unmount = function (key) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.filter(function (item) {\n            return item.key !== key;\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PortalManager, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.portals.map(function (_ref) {\n        var key = _ref.key,\n            children = _ref.children;\n        return _jsx(View, {\n          collapsable: false,\n          pointerEvents: \"box-none\",\n          style: StyleSheet.absoluteFill,\n          children: children\n        }, key);\n      });\n    }\n  }]);\n\n  return PortalManager;\n}(React.PureComponent);\n\nexport { PortalManager as default };","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Portal/PortalManager.js"],"names":["React","PortalManager","state","portals","mount","key","children","setState","update","map","item","unmount","filter","StyleSheet","absoluteFill","PureComponent"],"mappings":";;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;IAaqBC,a;;;;;;;;;;;;;;;UACnBC,K,GAAe;AACbC,MAAAA,OAAO,EAAE;AADI,K;;UAIfC,K,GAAQ,UAACC,GAAD,EAAcC,QAAd,EAAuC;AAC7C,YAAKC,QAAL,CAAc,UAAAL,KAAK;AAAA,eAAK;AACtBC,UAAAA,OAAO,+BAAMD,KAAK,CAACC,OAAZ,IAAqB;AAAEE,YAAAA,GAAG,EAAHA,GAAF;AAAOC,YAAAA,QAAQ,EAARA;AAAP,WAArB;AADe,SAAL;AAAA,OAAnB;AAGD,K;;UAEDE,M,GAAS,UAACH,GAAD,EAAcC,QAAd;AAAA,aACP,MAAKC,QAAL,CAAc,UAAAL,KAAK;AAAA,eAAK;AACtBC,UAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcM,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACjC,gBAAIA,IAAI,CAACL,GAAL,KAAaA,GAAjB,EAAsB;AACpB,qDAAYK,IAAZ;AAAkBJ,gBAAAA,QAAQ,EAARA;AAAlB;AACD;;AACD,mBAAOI,IAAP;AACD,WALQ;AADa,SAAL;AAAA,OAAnB,CADO;AAAA,K;;UAUTC,O,GAAU,UAACN,GAAD;AAAA,aACR,MAAKE,QAAL,CAAc,UAAAL,KAAK;AAAA,eAAK;AACtBC,UAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcS,MAAd,CAAqB,UAAAF,IAAI;AAAA,mBAAIA,IAAI,CAACL,GAAL,KAAaA,GAAjB;AAAA,WAAzB;AADa,SAAL;AAAA,OAAnB,CADQ;AAAA,K;;;;;;;WAKV,kBAAS;AACP,aAAO,KAAKH,KAAL,CAAWC,OAAX,CAAmBM,GAAnB,CAAuB;AAAA,YAAGJ,GAAH,QAAGA,GAAH;AAAA,YAAQC,QAAR,QAAQA,QAAR;AAAA,eAC5B,KAAC,IAAD;AAEE,UAAA,WAAW,EACT,KAHJ;AAKE,UAAA,aAAa,EAAC,UALhB;AAME,UAAA,KAAK,EAAEO,UAAU,CAACC,YANpB;AAAA,oBAQGR;AARH,WACOD,GADP,CAD4B;AAAA,OAAvB,CAAP;AAYD;;;;EAvCwCL,KAAK,CAACe,a;;SAA5Bd,a","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\ntype State = {\r\n  portals: Array<{\r\n    key: number,\r\n    children: React.Node,\r\n  }>,\r\n};\r\n\r\n/**\r\n * Portal host is the component which actually renders all Portals.\r\n */\r\nexport default class PortalManager extends React.PureComponent<{}, State> {\r\n  state: State = {\r\n    portals: [],\r\n  };\r\n\r\n  mount = (key: number, children: React.Node) => {\r\n    this.setState(state => ({\r\n      portals: [...state.portals, { key, children }],\r\n    }));\r\n  };\r\n\r\n  update = (key: number, children: React.Node) =>\r\n    this.setState(state => ({\r\n      portals: state.portals.map(item => {\r\n        if (item.key === key) {\r\n          return { ...item, children };\r\n        }\r\n        return item;\r\n      }),\r\n    }));\r\n\r\n  unmount = (key: number) =>\r\n    this.setState(state => ({\r\n      portals: state.portals.filter(item => item.key !== key),\r\n    }));\r\n\r\n  render() {\r\n    return this.state.portals.map(({ key, children }) => (\r\n      <View\r\n        key={key}\r\n        collapsable={\r\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\r\n        }\r\n        pointerEvents=\"box-none\"\r\n        style={StyleSheet.absoluteFill}\r\n      >\r\n        {children}\r\n      </View>\r\n    ));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}