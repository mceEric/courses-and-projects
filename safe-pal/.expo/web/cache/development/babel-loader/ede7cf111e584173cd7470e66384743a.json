{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../Typography/Title\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DialogTitle = function (_React$Component) {\n  _inherits(DialogTitle, _React$Component);\n\n  var _super = _createSuper(DialogTitle);\n\n  function DialogTitle() {\n    _classCallCheck(this, DialogTitle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      return _jsx(Title, _objectSpread(_objectSpread({\n        accessibilityTraits: \"header\",\n        accessibilityRole: \"header\",\n        style: [styles.text, {\n          color: theme.colors.text\n        }, style]\n      }, rest), {}, {\n        children: children\n      }));\n    }\n  }]);\n\n  return DialogTitle;\n}(React.Component);\n\nDialogTitle.displayName = 'Dialog.Title';\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  }\n});\nexport default withTheme(DialogTitle);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Dialog/DialogTitle.js"],"names":["React","Title","withTheme","DialogTitle","props","children","theme","style","rest","styles","text","color","colors","Component","displayName","StyleSheet","create","marginTop","marginBottom","marginHorizontal"],"mappings":";;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,KAAP;AACA,SAASC,SAAT;;;IA+CMC,W;;;;;;;;;;;;;WAGJ,kBAAS;AACP,wBAA4C,KAAKC,KAAjD;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,KAAlB,eAAkBA,KAAlB;AAAA,UAAyBC,KAAzB,eAAyBA,KAAzB;AAAA,UAAmCC,IAAnC;;AAEA,aACE,KAAC,KAAD;AACE,QAAA,mBAAmB,EAAC,QADtB;AAEE,QAAA,iBAAiB,EAAC,QAFpB;AAGE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEC,UAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaF;AAAtB,SAAd,EAA4CH,KAA5C;AAHT,SAIMC,IAJN;AAAA,kBAMGH;AANH,SADF;AAUD;;;;EAhBuBL,KAAK,CAACa,S;;AAA1BV,W,CACGW,W,GAAc,c;AAkBvB,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,IAAI,EAAE;AACJO,IAAAA,SAAS,EAAE,EADP;AAEJC,IAAAA,YAAY,EAAE,EAFV;AAGJC,IAAAA,gBAAgB,EAAE;AAHd;AADyB,CAAlB,CAAf;AAQA,eAAejB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport Title from '../Typography/Title';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Title text for the `DialogTitle`.\r\n   */\r\n  children: React.Node,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * A component to show a title in a Dialog.\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\r\n *\r\n * export default class MyComponent extends React.Component {\r\n *   state = {\r\n *     visible: false,\r\n *   };\r\n *\r\n *   _hideDialog = () => this.setState({ visible: false });\r\n *\r\n *   render() {\r\n *     return (\r\n *       <Portal>\r\n *         <Dialog\r\n *           visible={this.state.visible}\r\n *           onDismiss={this._hideDialog}>\r\n *           <Dialog.Title>This is a title</Dialog.Title>\r\n *           <Dialog.Content>\r\n *             <Paragraph>This is simple dialog</Paragraph>\r\n *           </Dialog.Content>\r\n *         </Dialog>\r\n *       </Portal>\r\n *     );\r\n *   }\r\n * }\r\n * ```\r\n */\r\nclass DialogTitle extends React.Component<Props> {\r\n  static displayName = 'Dialog.Title';\r\n\r\n  render() {\r\n    const { children, theme, style, ...rest } = this.props;\r\n\r\n    return (\r\n      <Title\r\n        accessibilityTraits=\"header\"\r\n        accessibilityRole=\"header\"\r\n        style={[styles.text, { color: theme.colors.text }, style]}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </Title>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    marginTop: 22,\r\n    marginBottom: 18,\r\n    marginHorizontal: 24,\r\n  },\r\n});\r\n\r\nexport default withTheme(DialogTitle);\r\n"]},"metadata":{},"sourceType":"module"}