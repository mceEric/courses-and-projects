{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useEffect } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Currently loggin in with\", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behaviour: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter email...\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Enter email...\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"Login\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonOutLineText,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\"\n  },\n  inputContainer: {\n    width: \"80%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: \"red\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutLine: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"red\",\n    borderWidth: 2\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutLineText: {\n    color: \"red\",\n    fontWeight: \"700\",\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/abasse/WebstormProjects/2022-ca326-travel-guide/MapDisplay/screens/LoginScreen.js"],"names":["NavigationContainer","useNavigation","React","useState","useEffect","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","navigate","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","inputContainer","text","input","buttonContainer","button","buttonOutLineText","StyleSheet","create","flex","justifyContent","alignContent","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","alignItems","padding","buttonOutLine","borderColor","borderWidth","buttonText","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import { NavigationContainer } from \"@react-navigation/native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport React, { useState, useEffect } from \"react\";\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\nimport { auth } from \"../firebase\";\n\nexport const LoginScreen = () => {\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const navigation = useNavigation()\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                navigation.navigate(\"Home\")\n            }\n        })\n        return unsubscribe\n    }, [])\n\n    const handleSignUp = () => {\n        auth\n            .createUserWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log(user.email);\n            })\n            .catch(error => alert(error.message))\n    }\n\n    const handleLogin = () => {\n        auth\n            .signInWithEmailAndPassword(email, password)\n            .then(userCredentials => {\n                const user = userCredentials.user;\n                console.log(\"Currently loggin in with\", user.email);\n            })\n            .catch(error => alert(error.message))\n    }\n\n    return (\n        <KeyboardAvoidingView\n            style={styles.container}\n            behaviour=\"padding\">\n\n            <View style={styles.inputContainer}>\n                <TextInput\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChangeText={text => setEmail(text)}\n                    style={styles.input}/>\n\n                <TextInput\n                    placeholder=\"Enter email...\"\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    style={styles.input}\n                    secureTextEntry/>\n\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                    onPress={handleLogin}\n                    style={styles.button}>\n\n                    <Text style={styles.button}>Login</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    onPress={handleSignUp}\n                    style={styles.button}>\n\n                    <Text style={styles.buttonOutLineText}>Login</Text>\n                </TouchableOpacity>\n\n            </View>\n\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n\n    inputContainer: {\n        width: \"80%\",\n    },\n\n    input: {\n        backgroundColor: \"white\",\n        paddingHorizontal: 15,\n        paddingVertical: 10,\n        borderRadius: 10,\n        marginTop: 5,\n    },\n\n    buttonContainer: {\n        width: \"60%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 40,\n    },\n\n    button: {\n        backgroundColor: \"red\",\n        width: \"100%\",\n        padding: 15,\n        borderRadius: 10,\n        alignItems: \"center\",\n    },\n\n    buttonOutLine: {\n        backgroundColor: \"white\",\n        marginTop: 5,\n        borderColor: \"red\",\n        borderWidth: 2,\n\n    },\n\n    buttonText: {\n        color: \"white\",\n        fontWeight: \"700\",\n        fontSize: 16,\n\n    },\n    buttonOutLineText: {\n        color: \"red\",\n        fontWeight: \"700\",\n        fontSize: 16,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}