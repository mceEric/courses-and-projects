{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth, chatDatabase, john } from \"../firebase\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var FriendsScreen = function FriendsScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n\n  var _useState = useState({\n    checker: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      chatName = _useState2[0],\n      setChatName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      render = _useState4[0],\n      setRender = _useState4[1];\n\n  var node = john.ref(\"users\");\n\n  var _useState5 = useState(route.params.friendList),\n      _useState6 = _slicedToArray(_useState5, 2),\n      friendList = _useState6[0],\n      setFriendList = _useState6[1];\n\n  var _useState7 = useState(route.params.requestList),\n      _useState8 = _slicedToArray(_useState7, 2),\n      requestList = _useState8[0],\n      setRequestList = _useState8[1];\n\n  useEffect(function () {\n    if (chatName.checker === true) {\n      navigation.navigate('Chat', {\n        chatName: chatName\n      });\n      setChatName({\n        checker: false\n      });\n    }\n  }, [chatName, render]);\n\n  function messageRoom(friend) {\n    var serverName = [auth.currentUser.uid, friend.friendId].sort().join(\"\");\n    var chatRef = chatDatabase.collection('Chatroom').doc(serverName).collection('chats');\n    chatRef.limit(1).get().then(function (snapshot) {\n      if (snapshot.size <= 0) {\n        chatRef.add({\n          text: auth.currentUser.displayName + \" and \" + friend.name,\n          createdAt: new Date().getTime(),\n          system: true,\n          name: auth.currentUser.displayName + friend.name\n        });\n      }\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n    setChatName({\n      serverName: serverName,\n      friendName: friend.name,\n      checker: true\n    });\n  }\n\n  function getRequestList() {\n    var currentNode = node.child(auth.currentUser.displayName);\n    var requestzList = [];\n    currentNode.child(\"friendRequests\").child(\"received\").once('value', function (snapshot) {\n      snapshot.forEach(function (child) {\n        requestzList.push({\n          name: child.key,\n          friendId: child.val()[0]\n        });\n      });\n    });\n    return requestzList;\n  }\n\n  function getFriendList() {\n    var currentNode = node.child(auth.currentUser.displayName);\n    var friendsList = [];\n    currentNode.child(\"friendList\").on('value', function (snapshot) {\n      snapshot.forEach(function (child) {\n        friendsList.push({\n          name: child.key,\n          friendId: child.val()[0]\n        });\n      });\n    });\n    return friendsList;\n  }\n\n  function acceptRequest(request) {\n    node.child(auth.currentUser.displayName).child(\"friendList\").child(request.name).set([request.friendId]);\n    node.child(request.name).child(\"friendList\").child(auth.currentUser.displayName).set([auth.currentUser.uid]);\n    rejectRequest(request);\n  }\n\n  function removeFriend(friendName) {\n    node.child(auth.currentUser.displayName).child(\"friendList\").child(friendName).remove();\n    node.child(friendName).child(\"friendList\").child(auth.currentUser.displayName).remove();\n    removeFriendLocation(friendName);\n  }\n\n  function rejectRequest(request) {\n    node.child(auth.currentUser.displayName).child(\"friendRequests\").child(\"received\").child(request.name).remove();\n    setRequestList(getRequestList());\n    setFriendList(getFriendList());\n  }\n\n  function removeFriendLocation(friendName) {\n    node.child(auth.currentUser.displayName).child(\"sharedLocations\").child(friendName).remove();\n    setFriendList(getFriendList());\n  }\n\n  function addFriendAlert(request) {\n    Alert.alert(\"Alert\", \"By clicking 'Continue' this user will be able to access your location at any time, are you sure you would like to continue?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Continue\",\n      onPress: function onPress() {\n        return acceptRequest(request);\n      }\n    }]);\n  }\n\n  function rejectFriendAlert(request) {\n    Alert.alert(\"Alert\", \"By clicking 'Continue' you will remove this users friend request, are you sure you want to continue?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Continue\",\n      onPress: function onPress() {\n        return rejectRequest(request);\n      }\n    }]);\n  }\n\n  function removeFriendAlert(friendName) {\n    Alert.alert(\"Alert\", \"By clicking 'Continue' you will no longer be friends with this user nor will you be able to acess thier location, are you sure you would like to continue?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Continue\",\n      onPress: function onPress() {\n        return removeFriend(friendName);\n      }\n    }]);\n  }\n\n  return _jsxs(ScrollView, {\n    children: [_jsx(View, {\n      style: styles.wrapper,\n      children: friendList.map(function (friend) {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.nameText,\n            children: friend.name\n          }), _jsx(TouchableOpacity, {\n            title: \"Remove Friend\",\n            onPress: function onPress() {\n              return removeFriendAlert(friend.name);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.texts,\n              children: \"Remove Friend\"\n            })\n          }), _jsx(TouchableOpacity, {\n            title: \"Message\",\n            onPress: function onPress() {\n              return messageRoom(friend);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.texts,\n              children: \"Message\"\n            })\n          })]\n        }, friend.name);\n      })\n    }), _jsx(View, {\n      style: styles.wrapper,\n      children: requestList.map(function (request) {\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.nameText,\n            children: request.name\n          }), _jsx(TouchableOpacity, {\n            title: \"Accept\",\n            onPress: function onPress() {\n              return addFriendAlert(request);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.texts,\n              children: \"Accept\"\n            })\n          }), _jsx(TouchableOpacity, {\n            title: \"Reject\",\n            onPress: function onPress() {\n              return rejectFriendAlert(request);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.texts,\n              children: \"Reject\"\n            })\n          })]\n        }, request.name);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  texts: {\n    alignItems: \"center\",\n    color: 'black',\n    fontSize: 20\n  },\n  nameText: {\n    alignItems: \"center\",\n    color: 'black',\n    fontSize: 24\n  },\n  Logo: {\n    width: 200,\n    height: 200\n  },\n  button: {\n    backgroundColor: '#daa520',\n    height: 50,\n    width: 200,\n    marginTop: 10,\n    borderRadius: 15,\n    borderWidth: 5,\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center',\n    borderRadius: 15,\n    borderWidth: 6,\n    width: 350,\n    backgroundColor: 'white',\n    borderColor: 'black',\n    marginBottom: 10\n  },\n  wrapper: {\n    justifyContent: \"center\",\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/screens/FriendRequestsScreen.js"],"names":["React","useState","useEffect","auth","chatDatabase","john","useNavigation","FriendsScreen","route","navigation","checker","chatName","setChatName","render","setRender","node","ref","params","friendList","setFriendList","requestList","setRequestList","navigate","messageRoom","friend","serverName","currentUser","uid","friendId","sort","join","chatRef","collection","doc","limit","get","then","snapshot","size","add","text","displayName","name","createdAt","Date","getTime","system","catch","error","alert","message","friendName","getRequestList","currentNode","child","requestzList","once","forEach","push","key","val","getFriendList","friendsList","on","acceptRequest","request","set","rejectRequest","removeFriend","remove","removeFriendLocation","addFriendAlert","Alert","style","onPress","rejectFriendAlert","removeFriendAlert","styles","wrapper","map","container","nameText","button","texts","StyleSheet","create","alignItems","color","fontSize","Logo","width","height","backgroundColor","marginTop","borderRadius","borderWidth","flex","padding","borderColor","marginBottom","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {auth, chatDatabase, john} from \"../firebase\";\r\nimport {StyleSheet, Text, View, ScrollView, TouchableOpacity, Alert} from 'react-native'\r\nimport {useNavigation} from \"@react-navigation/native\";\r\n\r\n//Functional component which render a users friend list, friend request list, and handle the creation of chats\r\nexport const FriendsScreen = ({route}) => {\r\n    //Declaring necesarry states\r\n    const navigation = useNavigation();\r\n    const [chatName, setChatName] = useState({checker: false});\r\n    const [render, setRender] = useState(false);\r\n    const node = john.ref(\"users\");\r\n    const [friendList, setFriendList] = useState(route.params.friendList)\r\n    const [requestList, setRequestList] = useState(route.params.requestList)\r\n\r\n    //A useEffect which listens for changes in the two states chatName and render\r\n    useEffect(() => {\r\n\r\n        if (chatName.checker === true) {\r\n            navigation.navigate('Chat', {chatName});\r\n            setChatName({checker: false})\r\n        }\r\n        \r\n    }, [chatName, render]);\r\n\r\n    //Creates chat room or enters chat rrom\r\n    function messageRoom(friend) {\r\n        //This creates a unique key name for the chatroom\r\n        const serverName = [auth.currentUser.uid, friend.friendId].sort().join(\"\")\r\n        const chatRef = chatDatabase.collection('Chatroom').doc(serverName).collection('chats')\r\n\r\n        chatRef.limit(1).get().then((snapshot) => {\r\n            //If the chat room does not exist push the title name of the chat room to the firestore database\r\n            if (snapshot.size <= 0) {\r\n                (chatRef\r\n                    .add({\r\n                        text: `${auth.currentUser.displayName} and ${friend.name}`,\r\n                        createdAt: new Date().getTime(),\r\n                        system: true,\r\n                        name: auth.currentUser.displayName + friend.name,\r\n                    }))\r\n            }\r\n        }).catch(error => alert(error.message))\r\n        //Enter chat room regardless\r\n        setChatName({serverName: serverName, friendName: friend.name, checker: true})\r\n    }\r\n\r\n    //Function to create the request list\r\n    function getRequestList() {\r\n        const currentNode = node.child(auth.currentUser.displayName);\r\n        const requestzList = [];\r\n        currentNode.child(\"friendRequests\").child(\"received\").once('value', snapshot => {\r\n            snapshot.forEach(child => {\r\n                //Push necessary data of the request user to an array\r\n                requestzList.push({ name: child.key, friendId: child.val()[0] });\r\n            });\r\n        });\r\n        return requestzList;\r\n    }\r\n\r\n    //Function to get friend list\r\n    function getFriendList() {\r\n        const currentNode = node.child(auth.currentUser.displayName);\r\n        const friendsList = [];\r\n        currentNode.child(\"friendList\").on('value', function(snapshot) {\r\n            snapshot.forEach(child => {\r\n                //Push necessary data of the friend to an array\r\n                friendsList.push({ name: child.key, friendId: child.val()[0] });\r\n            });\r\n        });\r\n        return friendsList\r\n    }\r\n\r\n    //Handles acceptance of the friend request \r\n    function acceptRequest(request) {\r\n        node.child(auth.currentUser.displayName).child(\"friendList\").child(request.name).set([request.friendId])\r\n        node.child(request.name).child(\"friendList\").child(auth.currentUser.displayName).set([auth.currentUser.uid])\r\n        //Calls reject request to remove the request from the database as the user is now in friendsList\r\n        rejectRequest(request);\r\n    }\r\n\r\n    //Function to remove a friend from a users friendList\r\n    function removeFriend(friendName) {\r\n        node.child(auth.currentUser.displayName).child(\"friendList\").child(friendName).remove()\r\n        node.child(friendName).child(\"friendList\").child(auth.currentUser.displayName).remove()\r\n        //Calls this function to remove the users sharedLocation if it was being shared\r\n        removeFriendLocation(friendName)\r\n    }\r\n\r\n    ////Handles rejection of friend request\r\n    function rejectRequest(request) {\r\n        node.child(auth.currentUser.displayName).child(\"friendRequests\").child(\"received\").child(request.name).remove();\r\n        //Resets friend list and request list\r\n        setRequestList(getRequestList());\r\n        setFriendList(getFriendList());\r\n    }\r\n\r\n    //Hadnels a friend removal\r\n    function removeFriendLocation(friendName) {\r\n        node.child(auth.currentUser.displayName).child(\"sharedLocations\").child(friendName).remove();\r\n        //Resets friend list\r\n        setFriendList(getFriendList());\r\n    }\r\n\r\n    //The next three functions will set alerts to users warning them of the consequences that could occur if they wish to continue\r\n    function addFriendAlert(request) {\r\n        Alert.alert(\r\n            \"Alert\",\r\n            \"By clicking 'Continue' this user will be able to access your location at any time, are you sure you would like to continue?\",\r\n            [\r\n                {\r\n                    text: \"Cancel\",\r\n                    style: \"cancel\"\r\n                },\r\n                {\r\n                    text: \"Continue\",\r\n                    onPress: () => acceptRequest(request)\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    function rejectFriendAlert(request) {\r\n        Alert.alert(\r\n            \"Alert\",\r\n            \"By clicking 'Continue' you will remove this users friend request, are you sure you want to continue?\",\r\n            [\r\n                {\r\n                    text: \"Cancel\",\r\n                    style: \"cancel\"\r\n                },\r\n                {\r\n                    text: \"Continue\",\r\n                    onPress: () => rejectRequest(request)\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    function removeFriendAlert(friendName) {\r\n        Alert.alert(\r\n            \"Alert\",\r\n            \"By clicking 'Continue' you will no longer be friends with this user nor will you be able to acess thier location, are you sure you would like to continue?\",\r\n            [\r\n                {\r\n                    text: \"Cancel\",\r\n                    style: \"cancel\"\r\n                },\r\n                {\r\n                    text: \"Continue\",\r\n                    onPress: () => removeFriend(friendName)\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ScrollView>\r\n            <View style={styles.wrapper}>{friendList.map((friend) => <View key={friend.name} style={styles.container}><Text style={styles.nameText}>{friend.name}</Text><TouchableOpacity title =\"Remove Friend\" onPress={() => removeFriendAlert(friend.name)}style={styles.button}><Text style={styles.texts}>Remove Friend</Text></TouchableOpacity><TouchableOpacity title =\"Message\" onPress={() => messageRoom(friend)}style={styles.button}><Text style={styles.texts}>Message</Text></TouchableOpacity></View>)}</View>\r\n            <View style={styles.wrapper}>{requestList.map((request) => <View key={request.name} style={styles.container}><Text style={styles.nameText}>{request.name}</Text><TouchableOpacity title =\"Accept\" onPress={() => addFriendAlert(request)}style={styles.button}><Text style={styles.texts}>Accept</Text></TouchableOpacity><TouchableOpacity title =\"Reject\" onPress={() => rejectFriendAlert(request)}style={styles.button}><Text style={styles.texts}>Reject</Text></TouchableOpacity></View>)}</View>\r\n        </ScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n        texts: {\r\n            alignItems: \"center\",\r\n            color: 'black',\r\n            fontSize: 20,\r\n        },\r\n\r\n        nameText: {\r\n            alignItems: \"center\",\r\n            color: 'black',\r\n            fontSize: 24,\r\n        },\r\n\r\n        Logo: {\r\n            width: 200,\r\n            height: 200,\r\n        },\r\n\r\n        button: {\r\n            backgroundColor: '#daa520',\r\n            height: 50,\r\n            width: 200,\r\n            marginTop: 10,\r\n            borderRadius: 15,\r\n            borderWidth: 5,\r\n            alignItems: 'center',\r\n\r\n\r\n        },\r\n\r\n        container: {\r\n            flex: 1,\r\n            padding: 10,\r\n            alignItems: 'center',\r\n            borderRadius: 15,\r\n            borderWidth: 6,\r\n            width: 350,\r\n            backgroundColor: 'white',\r\n            borderColor: 'black',\r\n            marginBottom: 10,\r\n\r\n        },\r\n\r\n        wrapper: {\r\n            justifyContent: \"center\",\r\n            alignItems: 'center',\r\n\r\n        },\r\n\r\n    }\r\n);"]},"metadata":{},"sourceType":"module"}