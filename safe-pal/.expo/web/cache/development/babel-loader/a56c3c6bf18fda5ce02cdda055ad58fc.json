{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"color\", \"size\"],\n    _excluded2 = [\"source\", \"color\", \"size\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar MaterialIcons;\n\ntry {\n  MaterialIcons = require(\"@expo/vector-icons/MaterialIcons\").default;\n} catch (e) {\n  MaterialIcons = function MaterialIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons' is not installed. To remove this warning, install 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n    return _jsx(Text, _objectSpread(_objectSpread({}, rest), {}, {\n      style: [styles.icon, {\n        color: color,\n        fontSize: size\n      }],\n      pointerEvents: \"none\",\n      children: \"\\u25A1\"\n    }));\n  };\n}\n\nvar isImageSource = function isImageSource(source) {\n  return typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string' || typeof source === 'number';\n};\n\nvar getIconId = function getIconId(source) {\n  if (typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string') {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport var isValidIcon = function isValidIcon(source) {\n  return typeof source === 'string' || isImageSource(source);\n};\nexport var isEqualIcon = function isEqualIcon(a, b) {\n  return a === b || getIconId(a) === getIconId(b);\n};\n\nvar Icon = function Icon(_ref2) {\n  var source = _ref2.source,\n      color = _ref2.color,\n      size = _ref2.size,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var direction = typeof source === 'object' && source.direction && source.source ? source.direction === 'auto' ? I18nManager.isRTL ? 'rtl' : 'ltr' : source.direction : null;\n  var s = typeof source === 'object' && source.direction && source.source ? source.source : source;\n\n  if (typeof s === 'string') {\n    return _jsx(MaterialIcons, _objectSpread(_objectSpread({}, rest), {}, {\n      name: s,\n      color: color,\n      size: size,\n      style: [{\n        transform: [{\n          scaleX: direction === 'rtl' ? -1 : 1\n        }]\n      }, styles.icon],\n      pointerEvents: \"none\",\n      accessibilityElementsHidden: true,\n      importantForAccessibility: \"no-hide-descendants\"\n    }));\n  } else if (isImageSource(s)) {\n    return _jsx(Image, _objectSpread(_objectSpread({}, rest), {}, {\n      source: s,\n      style: [{\n        transform: [{\n          scaleX: direction === 'rtl' ? -1 : 1\n        }]\n      }, {\n        width: size,\n        height: size,\n        tintColor: color,\n        resizeMode: 'contain'\n      }],\n      accessibilityElementsHidden: true,\n      importantForAccessibility: \"no-hide-descendants\"\n    }));\n  } else if (typeof s === 'function') {\n    return s({\n      color: color,\n      size: size,\n      direction: direction\n    });\n  }\n\n  return null;\n};\n\nexport default Icon;\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Icon.js"],"names":["React","MaterialIcons","require","default","e","name","color","size","rest","console","warn","styles","icon","fontSize","isImageSource","source","Object","prototype","hasOwnProperty","call","uri","getIconId","isValidIcon","isEqualIcon","a","b","Icon","direction","I18nManager","isRTL","s","transform","scaleX","width","height","tintColor","resizeMode","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { Image, Text, StyleSheet, I18nManager } from 'react-native';\r\nimport type { ImageSource } from 'react-native/Libraries/Image/ImageSource';\r\n\r\nlet MaterialIcons;\r\n\r\ntry {\r\n  // Optionally require vector-icons\r\n  MaterialIcons = require('react-native-vector-icons/MaterialIcons').default;\r\n} catch (e) {\r\n  MaterialIcons = ({ name, color, size, ...rest }) => {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\r\n      `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons' is not installed. To remove this warning, install 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\r\n    );\r\n\r\n    return (\r\n      <Text\r\n        {...rest}\r\n        style={[styles.icon, { color, fontSize: size }]}\r\n        pointerEvents=\"none\"\r\n      >\r\n        â–¡\r\n      </Text>\r\n    );\r\n  };\r\n}\r\n\r\ntype IconSourceBase = string | ImageSource;\r\n\r\nexport type IconSource =\r\n  | IconSourceBase\r\n  | $ReadOnly<{ source: IconSourceBase, direction: 'rtl' | 'ltr' | 'auto' }>\r\n  | ((props: IconProps) => React.Node);\r\n\r\ntype IconProps = {\r\n  color: string,\r\n  size: number,\r\n};\r\n\r\ntype Props = IconProps & {\r\n  source: IconSource,\r\n};\r\n\r\nconst isImageSource = (source: any) =>\r\n  // source is an object with uri\r\n  (typeof source === 'object' &&\r\n    source !== null &&\r\n    (Object.prototype.hasOwnProperty.call(source, 'uri') &&\r\n      typeof source.uri === 'string')) ||\r\n  // source is a module, e.g. - require('image')\r\n  typeof source === 'number';\r\n\r\nconst getIconId = (source: any) => {\r\n  if (\r\n    typeof source === 'object' &&\r\n    source !== null &&\r\n    (Object.prototype.hasOwnProperty.call(source, 'uri') &&\r\n      typeof source.uri === 'string')\r\n  ) {\r\n    return source.uri;\r\n  }\r\n\r\n  return source;\r\n};\r\n\r\nexport const isValidIcon = (source: any) =>\r\n  typeof source === 'string' || isImageSource(source);\r\n\r\nexport const isEqualIcon = (a: any, b: any) =>\r\n  a === b || getIconId(a) === getIconId(b);\r\n\r\nconst Icon = ({ source, color, size, ...rest }: Props) => {\r\n  const direction =\r\n    typeof source === 'object' && source.direction && source.source\r\n      ? source.direction === 'auto'\r\n        ? I18nManager.isRTL\r\n          ? 'rtl'\r\n          : 'ltr'\r\n        : source.direction\r\n      : null;\r\n  const s =\r\n    typeof source === 'object' && source.direction && source.source\r\n      ? source.source\r\n      : source;\r\n\r\n  if (typeof s === 'string') {\r\n    return (\r\n      <MaterialIcons\r\n        {...rest}\r\n        name={s}\r\n        color={color}\r\n        size={size}\r\n        style={[\r\n          {\r\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\r\n          },\r\n          styles.icon,\r\n        ]}\r\n        pointerEvents=\"none\"\r\n        accessibilityElementsHidden\r\n        importantForAccessibility=\"no-hide-descendants\"\r\n      />\r\n    );\r\n  } else if (isImageSource(s)) {\r\n    return (\r\n      <Image\r\n        {...rest}\r\n        source={s}\r\n        style={[\r\n          {\r\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\r\n          },\r\n          {\r\n            width: size,\r\n            height: size,\r\n            tintColor: color,\r\n            resizeMode: 'contain',\r\n          },\r\n        ]}\r\n        accessibilityElementsHidden\r\n        importantForAccessibility=\"no-hide-descendants\"\r\n      />\r\n    );\r\n  } else if (typeof s === 'function') {\r\n    return s({ color, size, direction });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Icon;\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}