{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card() {\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      elevation: new Animated.Value(_this.props.elevation)\n    };\n\n    _this._handlePressIn = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: 8,\n        duration: 150\n      }).start();\n    };\n\n    _this._handlePressOut = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: _this.props.elevation,\n        duration: 150\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          onLongPress = _this$props.onLongPress,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      var elevation = this.state.elevation;\n      var roundness = theme.roundness;\n      var total = React.Children.count(children);\n      var siblings = React.Children.map(children, function (child) {\n        return React.isValidElement(child) && child.type ? child.type.displayName : null;\n      });\n      return _jsx(Surface, {\n        style: [{\n          borderRadius: roundness,\n          elevation: elevation\n        }, style],\n        children: _jsx(TouchableWithoutFeedback, {\n          delayPressIn: 0,\n          disabled: !(onPress || onLongPress),\n          onLongPress: onLongPress,\n          onPress: onPress,\n          onPressIn: onPress ? this._handlePressIn : undefined,\n          onPressOut: onPress ? this._handlePressOut : undefined,\n          children: _jsx(View, {\n            style: styles.innerContainer,\n            children: React.Children.map(children, function (child, index) {\n              return React.isValidElement(child) ? React.cloneElement(child, {\n                index: index,\n                total: total,\n                siblings: siblings\n              }) : child;\n            })\n          })\n        })\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.defaultProps = {\n  elevation: 1\n};\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/Card/Card.js"],"names":["React","CardContent","CardActions","CardCover","Surface","withTheme","Card","state","elevation","Animated","Value","props","_handlePressIn","timing","toValue","duration","start","_handlePressOut","children","onLongPress","onPress","style","theme","roundness","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderRadius","undefined","styles","innerContainer","index","cloneElement","Component","Content","Actions","Cover","defaultProps","StyleSheet","create","flexGrow"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport {\r\n  Animated,\r\n  View,\r\n  TouchableWithoutFeedback,\r\n  StyleSheet,\r\n} from 'react-native';\r\nimport CardContent from './CardContent';\r\nimport CardActions from './CardActions';\r\nimport CardCover from './CardCover';\r\nimport Surface from '../Surface';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Resting elevation of the card which controls the drop shadow.\r\n   */\r\n  elevation?: number,\r\n  /**\r\n   * Function to execute on long press.\r\n   */\r\n  onLongPress?: () => mixed,\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: () => mixed,\r\n  /**\r\n   * Content of the `Card`.\r\n   */\r\n  children: React.Node,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\ntype State = {\r\n  elevation: Animated.Value,\r\n};\r\n\r\n/**\r\n * A card is a sheet of material that serves as an entry point to more detailed information.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { Button, Card, Title, Paragraph } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <Card>\r\n *     <Card.Content>\r\n *       <Title>Card title</Title>\r\n *       <Paragraph>Card content</Paragraph>\r\n *     </Card.Content>\r\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\r\n *     <Card.Actions>\r\n *       <Button>Cancel</Button>\r\n *       <Button>Ok</Button>\r\n *     </Card.Actions>\r\n *   </Card>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass Card extends React.Component<Props, State> {\r\n  // @component ./CardContent.js\r\n  static Content = CardContent;\r\n  // @component ./CardActions.js\r\n  static Actions = CardActions;\r\n  // @component ./CardCover.js\r\n  static Cover = CardCover;\r\n\r\n  static defaultProps = {\r\n    elevation: 1,\r\n  };\r\n\r\n  state = {\r\n    /* $FlowFixMe: somehow default props are not respected */\r\n    elevation: new Animated.Value(this.props.elevation),\r\n  };\r\n\r\n  _handlePressIn = () => {\r\n    Animated.timing(this.state.elevation, {\r\n      toValue: 8,\r\n      duration: 150,\r\n    }).start();\r\n  };\r\n\r\n  _handlePressOut = () => {\r\n    Animated.timing(this.state.elevation, {\r\n      /* $FlowFixMe: somehow default props are not respected */\r\n      toValue: this.props.elevation,\r\n      duration: 150,\r\n    }).start();\r\n  };\r\n\r\n  render() {\r\n    const { children, onLongPress, onPress, style, theme } = this.props;\r\n    const { elevation } = this.state;\r\n    const { roundness } = theme;\r\n    const total = React.Children.count(children);\r\n    const siblings = React.Children.map(\r\n      children,\r\n      child =>\r\n        React.isValidElement(child) && child.type\r\n          ? child.type.displayName\r\n          : null\r\n    );\r\n    return (\r\n      <Surface style={[{ borderRadius: roundness, elevation }, style]}>\r\n        <TouchableWithoutFeedback\r\n          delayPressIn={0}\r\n          disabled={!(onPress || onLongPress)}\r\n          onLongPress={onLongPress}\r\n          onPress={onPress}\r\n          onPressIn={onPress ? this._handlePressIn : undefined}\r\n          onPressOut={onPress ? this._handlePressOut : undefined}\r\n        >\r\n          <View style={styles.innerContainer}>\r\n            {React.Children.map(\r\n              children,\r\n              (child, index) =>\r\n                React.isValidElement(child)\r\n                  ? React.cloneElement(child, {\r\n                      index,\r\n                      total,\r\n                      siblings,\r\n                    })\r\n                  : child\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Surface>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  innerContainer: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default withTheme(Card);\r\n"]},"metadata":{},"sourceType":"module"}