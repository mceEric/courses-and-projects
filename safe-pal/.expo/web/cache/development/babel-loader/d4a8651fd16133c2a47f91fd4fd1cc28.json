{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"small\", \"icon\", \"label\", \"accessibilityLabel\", \"color\", \"disabled\", \"onPress\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FABGroup from \"./FABGroup\";\nimport Surface from \"../Surface\";\nimport CrossFadeIcon from \"../CrossFadeIcon\";\nimport Text from \"../Typography/Text\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FAB = function (_React$Component) {\n  _inherits(FAB, _React$Component);\n\n  var _super = _createSuper(FAB);\n\n  function FAB() {\n    _classCallCheck(this, FAB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FAB, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          small = _this$props.small,\n          icon = _this$props.icon,\n          label = _this$props.label,\n          _this$props$accessibi = _this$props.accessibilityLabel,\n          accessibilityLabel = _this$props$accessibi === void 0 ? label : _this$props$accessibi,\n          customColor = _this$props.color,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var disabledColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref$backgroundColor;\n\n      var foregroundColor;\n\n      if (typeof customColor !== 'undefined') {\n        foregroundColor = customColor;\n      } else if (disabled) {\n        foregroundColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n      } else {\n        foregroundColor = !color(backgroundColor).light() ? white : 'rgba(0, 0, 0, .54)';\n      }\n\n      var rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n      return _jsx(Surface, _objectSpread(_objectSpread({}, rest), {}, {\n        style: [{\n          backgroundColor: backgroundColor\n        }, styles.container, disabled && styles.disabled, style],\n        children: _jsx(TouchableRipple, {\n          borderless: true,\n          onPress: onPress,\n          rippleColor: rippleColor,\n          disabled: disabled,\n          accessibilityLabel: accessibilityLabel,\n          accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          accessibilityStates: disabled ? ['disabled'] : undefined,\n          style: styles.touchable,\n          children: _jsxs(View, {\n            style: [styles.content, label ? styles.extended : small ? styles.small : styles.standard],\n            pointerEvents: \"none\",\n            children: [_jsx(CrossFadeIcon, {\n              source: icon,\n              size: 24,\n              color: foregroundColor\n            }), label ? _jsx(Text, {\n              style: [styles.label, {\n                color: foregroundColor,\n                fontFamily: theme.fonts.medium\n              }],\n              children: label.toUpperCase()\n            }) : null]\n          })\n        })\n      }));\n    }\n  }]);\n\n  return FAB;\n}(React.Component);\n\nFAB.Group = FABGroup;\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6\n  },\n  touchable: {\n    borderRadius: 28\n  },\n  standard: {\n    height: 56,\n    width: 56\n  },\n  small: {\n    height: 40,\n    width: 40\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginHorizontal: 8\n  },\n  disabled: {\n    elevation: 0\n  }\n});\nexport default withTheme(FAB);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/FAB/FAB.js"],"names":["color","React","FABGroup","Surface","CrossFadeIcon","Text","TouchableRipple","black","white","withTheme","FAB","props","small","icon","label","accessibilityLabel","customColor","disabled","onPress","theme","style","rest","disabledColor","dark","alpha","rgb","string","StyleSheet","flatten","backgroundColor","colors","accent","foregroundColor","light","rippleColor","styles","container","undefined","touchable","content","extended","standard","fontFamily","fonts","medium","toUpperCase","Component","Group","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal"],"mappings":"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","sourcesContent":["/* @flow */\r\n\r\nimport color from 'color';\r\nimport * as React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport FABGroup from './FABGroup';\r\nimport Surface from '../Surface';\r\nimport CrossFadeIcon from '../CrossFadeIcon';\r\nimport Text from '../Typography/Text';\r\nimport TouchableRipple from '../TouchableRipple';\r\nimport { black, white } from '../../styles/colors';\r\nimport { withTheme } from '../../core/theming';\r\nimport type { Theme } from '../../types';\r\nimport type { IconSource } from './../Icon';\r\n\r\ntype Props = {\r\n  /**\r\n   * Icon to display for the `FAB`.\r\n   */\r\n  icon: IconSource,\r\n  /**\r\n   * Optional label for extended `FAB`.\r\n   */\r\n  label?: string,\r\n  /**\r\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\r\n   * Uses `label` by default if specified.\r\n   */\r\n  accessibilityLabel?: string,\r\n  /**\r\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\r\n   */\r\n  small?: boolean,\r\n  /**\r\n   * Custom color for the `FAB`.\r\n   */\r\n  color?: string,\r\n  /**\r\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\r\n   */\r\n  disabled?: boolean,\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: () => mixed,\r\n  style?: any,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * A floating action button represents the primary action in an application.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img src=\"screenshots/fab-1.png\" />\r\n *   <img src=\"screenshots/fab-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { StyleSheet } from 'react-native';\r\n * import { FAB } from 'react-native-paper';\r\n *\r\n * const MyComponent = () => (\r\n *   <FAB\r\n *     style={styles.fab}\r\n *     small\r\n *     icon=\"add\"\r\n *     onPress={() => console.log('Pressed')}\r\n *   />\r\n * );\r\n *\r\n * const styles = StyleSheet.create({\r\n *   fab: {\r\n *     position: 'absolute',\r\n *     margin: 16,\r\n *     right: 0,\r\n *     bottom: 0,\r\n *   },\r\n * })\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass FAB extends React.Component<Props> {\r\n  // @component ./FABGroup.js\r\n  static Group = FABGroup;\r\n\r\n  render() {\r\n    const {\r\n      small,\r\n      icon,\r\n      label,\r\n      accessibilityLabel = label,\r\n      color: customColor,\r\n      disabled,\r\n      onPress,\r\n      theme,\r\n      style,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    const disabledColor = color(theme.dark ? white : black)\r\n      .alpha(0.12)\r\n      .rgb()\r\n      .string();\r\n\r\n    const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\r\n      StyleSheet.flatten(style) || {};\r\n\r\n    let foregroundColor;\r\n\r\n    if (typeof customColor !== 'undefined') {\r\n      foregroundColor = customColor;\r\n    } else if (disabled) {\r\n      foregroundColor = color(theme.dark ? white : black)\r\n        .alpha(0.32)\r\n        .rgb()\r\n        .string();\r\n    } else {\r\n      foregroundColor = !color(backgroundColor).light()\r\n        ? white\r\n        : 'rgba(0, 0, 0, .54)';\r\n    }\r\n\r\n    const rippleColor = color(foregroundColor)\r\n      .alpha(0.32)\r\n      .rgb()\r\n      .string();\r\n\r\n    return (\r\n      <Surface\r\n        {...rest}\r\n        style={[\r\n          { backgroundColor },\r\n          styles.container,\r\n          disabled && styles.disabled,\r\n          style,\r\n        ]}\r\n      >\r\n        <TouchableRipple\r\n          borderless\r\n          onPress={onPress}\r\n          rippleColor={rippleColor}\r\n          disabled={disabled}\r\n          accessibilityLabel={accessibilityLabel}\r\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\r\n          accessibilityComponentType=\"button\"\r\n          accessibilityRole=\"button\"\r\n          accessibilityStates={disabled ? ['disabled'] : undefined}\r\n          style={styles.touchable}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.content,\r\n              label ? styles.extended : small ? styles.small : styles.standard,\r\n            ]}\r\n            pointerEvents=\"none\"\r\n          >\r\n            <CrossFadeIcon source={icon} size={24} color={foregroundColor} />\r\n            {label ? (\r\n              <Text\r\n                style={[\r\n                  styles.label,\r\n                  { color: foregroundColor, fontFamily: theme.fonts.medium },\r\n                ]}\r\n              >\r\n                {label.toUpperCase()}\r\n              </Text>\r\n            ) : null}\r\n          </View>\r\n        </TouchableRipple>\r\n      </Surface>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 28,\r\n    elevation: 6,\r\n  },\r\n  touchable: {\r\n    borderRadius: 28,\r\n  },\r\n  standard: {\r\n    height: 56,\r\n    width: 56,\r\n  },\r\n  small: {\r\n    height: 40,\r\n    width: 40,\r\n  },\r\n  extended: {\r\n    height: 48,\r\n    paddingHorizontal: 16,\r\n  },\r\n  content: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  label: {\r\n    marginHorizontal: 8,\r\n  },\r\n  disabled: {\r\n    elevation: 0,\r\n  },\r\n});\r\n\r\nexport default withTheme(FAB);\r\n"]},"metadata":{},"sourceType":"module"}