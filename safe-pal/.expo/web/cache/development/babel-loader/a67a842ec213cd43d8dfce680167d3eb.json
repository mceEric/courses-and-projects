{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"status\", \"disabled\", \"onPress\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Icon from \"./Icon\";\nimport TouchableRipple from \"./TouchableRipple\";\nimport { withTheme } from \"../core/theming\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CheckboxIOS = function (_React$Component) {\n  _inherits(CheckboxIOS, _React$Component);\n\n  var _super = _createSuper(CheckboxIOS);\n\n  function CheckboxIOS() {\n    _classCallCheck(this, CheckboxIOS);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CheckboxIOS, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          status = _this$props.status,\n          disabled = _this$props.disabled,\n          onPress = _this$props.onPress,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, _excluded);\n\n      var checked = status === 'checked';\n      var indeterminate = status === 'indeterminate';\n      var checkedColor = disabled ? theme.colors.disabled : this.props.color || theme.colors.accent;\n      var rippleColor;\n\n      if (disabled) {\n        rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n      } else {\n        rippleColor = color(checkedColor).fade(0.32).rgb().string();\n      }\n\n      var icon = indeterminate ? 'remove' : 'done';\n      return _jsx(TouchableRipple, _objectSpread(_objectSpread({}, rest), {}, {\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: onPress,\n        disabled: disabled,\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : undefined,\n        accessibilityLiveRegion: \"polite\",\n        style: styles.container,\n        children: _jsx(View, {\n          style: {\n            opacity: indeterminate || checked ? 1 : 0\n          },\n          children: _jsx(Icon, {\n            allowFontScaling: false,\n            source: icon,\n            size: 24,\n            color: checkedColor\n          })\n        })\n      }));\n    }\n  }]);\n\n  return CheckboxIOS;\n}(React.Component);\n\nCheckboxIOS.displayName = 'Checkbox.IOS';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(CheckboxIOS);","map":{"version":3,"sources":["C:/projectpog/2022-ca326-travel-guide/MapDisplay/node_modules/react-native-paper/src/components/CheckboxIOS.js"],"names":["React","color","Icon","TouchableRipple","withTheme","CheckboxIOS","props","status","disabled","onPress","theme","rest","checked","indeterminate","checkedColor","colors","accent","rippleColor","text","alpha","rgb","string","fade","icon","undefined","styles","container","opacity","Component","displayName","StyleSheet","create","borderRadius","padding"],"mappings":";;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;AACA,SAASC,SAAT;;;IAyCMC,W;;;;;;;;;;;;;WAGJ,kBAAS;AACP,wBAAsD,KAAKC,KAA3D;AAAA,UAAQC,MAAR,eAAQA,MAAR;AAAA,UAAgBC,QAAhB,eAAgBA,QAAhB;AAAA,UAA0BC,OAA1B,eAA0BA,OAA1B;AAAA,UAAmCC,KAAnC,eAAmCA,KAAnC;AAAA,UAA6CC,IAA7C;;AACA,UAAMC,OAAO,GAAGL,MAAM,KAAK,SAA3B;AACA,UAAMM,aAAa,GAAGN,MAAM,KAAK,eAAjC;AAEA,UAAMO,YAAY,GAAGN,QAAQ,GACzBE,KAAK,CAACK,MAAN,CAAaP,QADY,GAEzB,KAAKF,KAAL,CAAWL,KAAX,IAAoBS,KAAK,CAACK,MAAN,CAAaC,MAFrC;AAIA,UAAIC,WAAJ;;AAEA,UAAIT,QAAJ,EAAc;AACZS,QAAAA,WAAW,GAAGhB,KAAK,CAACS,KAAK,CAACK,MAAN,CAAaG,IAAd,CAAL,CACXC,KADW,CACL,IADK,EAEXC,GAFW,GAGXC,MAHW,EAAd;AAID,OALD,MAKO;AACLJ,QAAAA,WAAW,GAAGhB,KAAK,CAACa,YAAD,CAAL,CACXQ,IADW,CACN,IADM,EAEXF,GAFW,GAGXC,MAHW,EAAd;AAID;;AAED,UAAME,IAAI,GAAGV,aAAa,GAAG,QAAH,GAAc,MAAxC;AAEA,aACE,KAAC,eAAD,kCACMF,IADN;AAEE,QAAA,UAAU,MAFZ;AAGE,QAAA,WAAW,EAAEM,WAHf;AAIE,QAAA,OAAO,EAAER,OAJX;AAKE,QAAA,QAAQ,EAAED,QALZ;AAME,QAAA,mBAAmB,EAAEA,QAAQ,GAAG,CAAC,QAAD,EAAW,UAAX,CAAH,GAA4B,QAN3D;AAOE,QAAA,0BAA0B,EAAC,QAP7B;AAQE,QAAA,iBAAiB,EAAC,QARpB;AASE,QAAA,mBAAmB,EAAEA,QAAQ,GAAG,CAAC,UAAD,CAAH,GAAkBgB,SATjD;AAUE,QAAA,uBAAuB,EAAC,QAV1B;AAWE,QAAA,KAAK,EAAEC,MAAM,CAACC,SAXhB;AAAA,kBAaE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAEd,aAAa,IAAID,OAAjB,GAA2B,CAA3B,GAA+B;AAA1C,WAAb;AAAA,oBACE,KAAC,IAAD;AACE,YAAA,gBAAgB,EAAE,KADpB;AAEE,YAAA,MAAM,EAAEW,IAFV;AAGE,YAAA,IAAI,EAAE,EAHR;AAIE,YAAA,KAAK,EAAET;AAJT;AADF;AAbF,SADF;AAwBD;;;;EApDuBd,KAAK,CAAC4B,S;;AAA1BvB,W,CACGwB,W,GAAc,c;AAsDvB,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,YAAY,EAAE,EADL;AAETC,IAAAA,OAAO,EAAE;AAFA;AADoB,CAAlB,CAAf;AAOA,eAAe7B,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\r\n\r\nimport * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport color from 'color';\r\nimport Icon from './Icon';\r\nimport TouchableRipple from './TouchableRipple';\r\nimport { withTheme } from '../core/theming';\r\nimport type { Theme } from '../types';\r\n\r\ntype Props = {\r\n  /**\r\n   * Status of checkbox.\r\n   */\r\n  status: 'checked' | 'unchecked' | 'indeterminate',\r\n  /**\r\n   * Whether checkbox is disabled.\r\n   */\r\n  disabled?: boolean,\r\n  /**\r\n   * Function to execute on press.\r\n   */\r\n  onPress?: () => mixed,\r\n  /**\r\n   * Custom color for checkbox.\r\n   */\r\n  color?: string,\r\n  /**\r\n   * @optional\r\n   */\r\n  theme: Theme,\r\n};\r\n\r\n/**\r\n * Checkboxes allow the selection of multiple options from a set.\r\n * This component follows platform guidelines for iOS.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\r\n *     <figcaption>Enabled</figcaption>\r\n *   </figure>\r\n *   <figure>\r\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\r\n *     <figcaption>Disabled</figcaption>\r\n *   </figure>\r\n * </div>\r\n */\r\nclass CheckboxIOS extends React.Component<Props> {\r\n  static displayName = 'Checkbox.IOS';\r\n\r\n  render() {\r\n    const { status, disabled, onPress, theme, ...rest } = this.props;\r\n    const checked = status === 'checked';\r\n    const indeterminate = status === 'indeterminate';\r\n\r\n    const checkedColor = disabled\r\n      ? theme.colors.disabled\r\n      : this.props.color || theme.colors.accent;\r\n\r\n    let rippleColor;\r\n\r\n    if (disabled) {\r\n      rippleColor = color(theme.colors.text)\r\n        .alpha(0.16)\r\n        .rgb()\r\n        .string();\r\n    } else {\r\n      rippleColor = color(checkedColor)\r\n        .fade(0.32)\r\n        .rgb()\r\n        .string();\r\n    }\r\n\r\n    const icon = indeterminate ? 'remove' : 'done';\r\n\r\n    return (\r\n      <TouchableRipple\r\n        {...rest}\r\n        borderless\r\n        rippleColor={rippleColor}\r\n        onPress={onPress}\r\n        disabled={disabled}\r\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\r\n        accessibilityComponentType=\"button\"\r\n        accessibilityRole=\"button\"\r\n        accessibilityStates={disabled ? ['disabled'] : undefined}\r\n        accessibilityLiveRegion=\"polite\"\r\n        style={styles.container}\r\n      >\r\n        <View style={{ opacity: indeterminate || checked ? 1 : 0 }}>\r\n          <Icon\r\n            allowFontScaling={false}\r\n            source={icon}\r\n            size={24}\r\n            color={checkedColor}\r\n          />\r\n        </View>\r\n      </TouchableRipple>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 18,\r\n    padding: 6,\r\n  },\r\n});\r\n\r\nexport default withTheme(CheckboxIOS);\r\n"]},"metadata":{},"sourceType":"module"}