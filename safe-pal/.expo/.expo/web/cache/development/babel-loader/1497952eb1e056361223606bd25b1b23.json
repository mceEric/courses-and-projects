{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MapScreen = function (_React$Component) {\n  _inherits(MapScreen, _React$Component);\n\n  var _super = _createSuper(MapScreen);\n\n  function MapScreen() {\n    _classCallCheck(this, MapScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(MapView, {\n          showsMyLocationButton: true,\n          mapType: 'hybrid',\n          style: StyleSheet.absoluteFillObject,\n          provider: MapView.PROVIDER_GOOGLE,\n          showsUserLocation: true\n        }), _jsx(StatusBar, {\n          style: \"auto\"\n        })]\n      });\n    }\n  }]);\n\n  return MapScreen;\n}(React.Component);\n\nexport { MapScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/abasse/WebstormProjects/2022-ca326-travel-guide/MapView/App.js"],"names":["React","StatusBar","MapView","PROVIDER_GOOGLE","MapScreen","styles","container","StyleSheet","absoluteFillObject","Component","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAEA,OAAOC,OAAP,IAAkBC,eAAlB,QAAyC,mBAAzC;;;;IAEqBC,S;;;;;;;;;;;;;WACjB,kBAAS;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACI,KAAC,OAAD;AACI,UAAA,qBAAqB,EAAE,IAD3B;AAEI,UAAA,OAAO,EAAE,QAFb;AAGI,UAAA,KAAK,EAAEC,UAAU,CAACC,kBAHtB;AAII,UAAA,QAAQ,EAAGN,OAAO,CAACC,eAJvB;AAKI,UAAA,iBAAiB,EAAE;AALvB,UADJ,EAQI,KAAC,SAAD;AAAW,UAAA,KAAK,EAAC;AAAjB,UARJ;AAAA,QADJ;AAaH;;;;EAfkCH,KAAK,CAACS,S;;SAAxBL,S;AAmBrB,IAAMC,MAAM,GAAGE,UAAU,CAACG,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View } from 'react-native';\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\n\nexport default class MapScreen extends React.Component  {\n    render() {\n        return (\n            <View style={styles.container}>\n                <MapView\n                    showsMyLocationButton={true}\n                    mapType={'hybrid'}\n                    style={StyleSheet.absoluteFillObject}\n                    provider={ MapView.PROVIDER_GOOGLE }\n                    showsUserLocation={true}\n                />\n                <StatusBar style=\"auto\"/>\n\n            </View>\n        );\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}